Search.setIndex({"docnames": ["api", "api/compas_cra", "api/compas_cra.datastructures", "api/compas_cra.equilibrium", "api/compas_cra.viewers", "api/generated/compas_cra.datastructures.CRA_Assembly", "api/generated/compas_cra.datastructures.CRA_Assembly.ToString", "api/generated/compas_cra.datastructures.CRA_Assembly.add_block", "api/generated/compas_cra.datastructures.CRA_Assembly.add_blocks_from_polysurfaces", "api/generated/compas_cra.datastructures.CRA_Assembly.add_blocks_from_rhinomeshes", "api/generated/compas_cra.datastructures.CRA_Assembly.add_edge", "api/generated/compas_cra.datastructures.CRA_Assembly.add_interface", "api/generated/compas_cra.datastructures.CRA_Assembly.add_interface_to_interfaces", "api/generated/compas_cra.datastructures.CRA_Assembly.add_interfaces_from_meshes", "api/generated/compas_cra.datastructures.CRA_Assembly.add_node", "api/generated/compas_cra.datastructures.CRA_Assembly.add_to_interfaces", "api/generated/compas_cra.datastructures.CRA_Assembly.adjacency_matrix", "api/generated/compas_cra.datastructures.CRA_Assembly.clear", "api/generated/compas_cra.datastructures.CRA_Assembly.complement", "api/generated/compas_cra.datastructures.CRA_Assembly.connected_edges", "api/generated/compas_cra.datastructures.CRA_Assembly.connectivity_matrix", "api/generated/compas_cra.datastructures.CRA_Assembly.copy", "api/generated/compas_cra.datastructures.CRA_Assembly.count_crossings", "api/generated/compas_cra.datastructures.CRA_Assembly.degree", "api/generated/compas_cra.datastructures.CRA_Assembly.degree_in", "api/generated/compas_cra.datastructures.CRA_Assembly.degree_matrix", "api/generated/compas_cra.datastructures.CRA_Assembly.degree_out", "api/generated/compas_cra.datastructures.CRA_Assembly.delete_edge", "api/generated/compas_cra.datastructures.CRA_Assembly.delete_node", "api/generated/compas_cra.datastructures.CRA_Assembly.edge_attribute", "api/generated/compas_cra.datastructures.CRA_Assembly.edge_attributes", "api/generated/compas_cra.datastructures.CRA_Assembly.edge_coordinates", "api/generated/compas_cra.datastructures.CRA_Assembly.edge_direction", "api/generated/compas_cra.datastructures.CRA_Assembly.edge_length", "api/generated/compas_cra.datastructures.CRA_Assembly.edge_midpoint", "api/generated/compas_cra.datastructures.CRA_Assembly.edge_point", "api/generated/compas_cra.datastructures.CRA_Assembly.edge_sample", "api/generated/compas_cra.datastructures.CRA_Assembly.edge_vector", "api/generated/compas_cra.datastructures.CRA_Assembly.edges", "api/generated/compas_cra.datastructures.CRA_Assembly.edges_attribute", "api/generated/compas_cra.datastructures.CRA_Assembly.edges_attributes", "api/generated/compas_cra.datastructures.CRA_Assembly.edges_where", "api/generated/compas_cra.datastructures.CRA_Assembly.edges_where_predicate", "api/generated/compas_cra.datastructures.CRA_Assembly.embed_in_plane", "api/generated/compas_cra.datastructures.CRA_Assembly.find_crossings", "api/generated/compas_cra.datastructures.CRA_Assembly.find_cycles", "api/generated/compas_cra.datastructures.CRA_Assembly.from_data", "api/generated/compas_cra.datastructures.CRA_Assembly.from_edges", "api/generated/compas_cra.datastructures.CRA_Assembly.from_geometry", "api/generated/compas_cra.datastructures.CRA_Assembly.from_json", "api/generated/compas_cra.datastructures.CRA_Assembly.from_jsonstring", "api/generated/compas_cra.datastructures.CRA_Assembly.from_lines", "api/generated/compas_cra.datastructures.CRA_Assembly.from_networkx", "api/generated/compas_cra.datastructures.CRA_Assembly.from_nodes_and_edges", "api/generated/compas_cra.datastructures.CRA_Assembly.from_obj", "api/generated/compas_cra.datastructures.CRA_Assembly.from_pointcloud", "api/generated/compas_cra.datastructures.CRA_Assembly.get_any_edge", "api/generated/compas_cra.datastructures.CRA_Assembly.get_any_edges", "api/generated/compas_cra.datastructures.CRA_Assembly.get_any_node", "api/generated/compas_cra.datastructures.CRA_Assembly.get_any_nodes", "api/generated/compas_cra.datastructures.CRA_Assembly.get_weight_mean", "api/generated/compas_cra.datastructures.CRA_Assembly.get_weight_total", "api/generated/compas_cra.datastructures.CRA_Assembly.gkey_key", "api/generated/compas_cra.datastructures.CRA_Assembly.gkey_node", "api/generated/compas_cra.datastructures.CRA_Assembly.has_edge", "api/generated/compas_cra.datastructures.CRA_Assembly.has_node", "api/generated/compas_cra.datastructures.CRA_Assembly.index_key", "api/generated/compas_cra.datastructures.CRA_Assembly.index_uv", "api/generated/compas_cra.datastructures.CRA_Assembly.is_block_support", "api/generated/compas_cra.datastructures.CRA_Assembly.is_connected", "api/generated/compas_cra.datastructures.CRA_Assembly.is_crossed", "api/generated/compas_cra.datastructures.CRA_Assembly.is_leaf", "api/generated/compas_cra.datastructures.CRA_Assembly.is_node_connected", "api/generated/compas_cra.datastructures.CRA_Assembly.is_planar", "api/generated/compas_cra.datastructures.CRA_Assembly.is_planar_embedding", "api/generated/compas_cra.datastructures.CRA_Assembly.is_xy", "api/generated/compas_cra.datastructures.CRA_Assembly.key_gkey", "api/generated/compas_cra.datastructures.CRA_Assembly.key_index", "api/generated/compas_cra.datastructures.CRA_Assembly.laplacian_matrix", "api/generated/compas_cra.datastructures.CRA_Assembly.leaves", "api/generated/compas_cra.datastructures.CRA_Assembly.move_block", "api/generated/compas_cra.datastructures.CRA_Assembly.neighborhood", "api/generated/compas_cra.datastructures.CRA_Assembly.neighbors", "api/generated/compas_cra.datastructures.CRA_Assembly.neighbors_in", "api/generated/compas_cra.datastructures.CRA_Assembly.neighbors_out", "api/generated/compas_cra.datastructures.CRA_Assembly.network_adjacency_matrix", "api/generated/compas_cra.datastructures.CRA_Assembly.network_connectivity_matrix", "api/generated/compas_cra.datastructures.CRA_Assembly.network_degree_matrix", "api/generated/compas_cra.datastructures.CRA_Assembly.network_embed_in_plane", "api/generated/compas_cra.datastructures.CRA_Assembly.network_is_planar", "api/generated/compas_cra.datastructures.CRA_Assembly.network_is_planar_embedding", "api/generated/compas_cra.datastructures.CRA_Assembly.network_laplacian_matrix", "api/generated/compas_cra.datastructures.CRA_Assembly.node_attribute", "api/generated/compas_cra.datastructures.CRA_Assembly.node_attributes", "api/generated/compas_cra.datastructures.CRA_Assembly.node_coordinates", "api/generated/compas_cra.datastructures.CRA_Assembly.node_gkey", "api/generated/compas_cra.datastructures.CRA_Assembly.node_laplacian", "api/generated/compas_cra.datastructures.CRA_Assembly.node_neighborhood_centroid", "api/generated/compas_cra.datastructures.CRA_Assembly.node_sample", "api/generated/compas_cra.datastructures.CRA_Assembly.nodes", "api/generated/compas_cra.datastructures.CRA_Assembly.nodes_attribute", "api/generated/compas_cra.datastructures.CRA_Assembly.nodes_attributes", "api/generated/compas_cra.datastructures.CRA_Assembly.nodes_where", "api/generated/compas_cra.datastructures.CRA_Assembly.nodes_where_predicate", "api/generated/compas_cra.datastructures.CRA_Assembly.number_of_edges", "api/generated/compas_cra.datastructures.CRA_Assembly.number_of_interface_nodes", "api/generated/compas_cra.datastructures.CRA_Assembly.number_of_nodes", "api/generated/compas_cra.datastructures.CRA_Assembly.rotate_assembly", "api/generated/compas_cra.datastructures.CRA_Assembly.set_boundary_condition", "api/generated/compas_cra.datastructures.CRA_Assembly.set_boundary_conditions", "api/generated/compas_cra.datastructures.CRA_Assembly.sha256", "api/generated/compas_cra.datastructures.CRA_Assembly.shortest_path", "api/generated/compas_cra.datastructures.CRA_Assembly.smooth", "api/generated/compas_cra.datastructures.CRA_Assembly.split_edge", "api/generated/compas_cra.datastructures.CRA_Assembly.subset", "api/generated/compas_cra.datastructures.CRA_Assembly.summary", "api/generated/compas_cra.datastructures.CRA_Assembly.to_data", "api/generated/compas_cra.datastructures.CRA_Assembly.to_json", "api/generated/compas_cra.datastructures.CRA_Assembly.to_jsonstring", "api/generated/compas_cra.datastructures.CRA_Assembly.to_lines", "api/generated/compas_cra.datastructures.CRA_Assembly.to_networkx", "api/generated/compas_cra.datastructures.CRA_Assembly.to_nodes_and_edges", "api/generated/compas_cra.datastructures.CRA_Assembly.to_obj", "api/generated/compas_cra.datastructures.CRA_Assembly.to_points", "api/generated/compas_cra.datastructures.CRA_Assembly.transform", "api/generated/compas_cra.datastructures.CRA_Assembly.transformed", "api/generated/compas_cra.datastructures.CRA_Assembly.unset_edge_attribute", "api/generated/compas_cra.datastructures.CRA_Assembly.unset_node_attribute", "api/generated/compas_cra.datastructures.CRA_Assembly.update_dea", "api/generated/compas_cra.datastructures.CRA_Assembly.update_default_edge_attributes", "api/generated/compas_cra.datastructures.CRA_Assembly.update_default_node_attributes", "api/generated/compas_cra.datastructures.CRA_Assembly.update_dna", "api/generated/compas_cra.datastructures.CRA_Assembly.uv_index", "api/generated/compas_cra.datastructures.CRA_Assembly.validate_data", "api/generated/compas_cra.datastructures.CRA_Assembly.validate_json", "api/generated/compas_cra.datastructures.assembly_interfaces_numpy", "api/generated/compas_cra.equilibrium.cra_penalty_solve", "api/generated/compas_cra.equilibrium.cra_solve", "api/generated/compas_cra.equilibrium.make_aeq", "api/generated/compas_cra.equilibrium.make_afr", "api/generated/compas_cra.equilibrium.unit_basis", "examples", "examples/armadillo", "examples/bridge", "examples/cubes", "examples/shelf", "examples/snake", "examples/stacks", "examples/wedge", "index", "installation", "license", "tutorial"], "filenames": ["api.rst", "api/compas_cra.rst", "api/compas_cra.datastructures.rst", "api/compas_cra.equilibrium.rst", "api/compas_cra.viewers.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.ToString.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.add_block.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.add_blocks_from_polysurfaces.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.add_blocks_from_rhinomeshes.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.add_edge.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.add_interface.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.add_interface_to_interfaces.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.add_interfaces_from_meshes.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.add_node.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.add_to_interfaces.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.adjacency_matrix.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.clear.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.complement.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.connected_edges.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.connectivity_matrix.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.copy.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.count_crossings.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.degree.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.degree_in.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.degree_matrix.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.degree_out.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.delete_edge.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.delete_node.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.edge_attribute.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.edge_attributes.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.edge_coordinates.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.edge_direction.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.edge_length.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.edge_midpoint.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.edge_point.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.edge_sample.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.edge_vector.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.edges.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.edges_attribute.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.edges_attributes.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.edges_where.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.edges_where_predicate.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.embed_in_plane.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.find_crossings.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.find_cycles.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.from_data.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.from_edges.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.from_geometry.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.from_json.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.from_jsonstring.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.from_lines.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.from_networkx.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.from_nodes_and_edges.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.from_obj.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.from_pointcloud.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.get_any_edge.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.get_any_edges.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.get_any_node.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.get_any_nodes.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.get_weight_mean.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.get_weight_total.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.gkey_key.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.gkey_node.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.has_edge.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.has_node.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.index_key.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.index_uv.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.is_block_support.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.is_connected.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.is_crossed.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.is_leaf.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.is_node_connected.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.is_planar.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.is_planar_embedding.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.is_xy.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.key_gkey.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.key_index.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.laplacian_matrix.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.leaves.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.move_block.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.neighborhood.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.neighbors.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.neighbors_in.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.neighbors_out.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.network_adjacency_matrix.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.network_connectivity_matrix.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.network_degree_matrix.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.network_embed_in_plane.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.network_is_planar.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.network_is_planar_embedding.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.network_laplacian_matrix.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.node_attribute.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.node_attributes.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.node_coordinates.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.node_gkey.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.node_laplacian.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.node_neighborhood_centroid.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.node_sample.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.nodes.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.nodes_attribute.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.nodes_attributes.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.nodes_where.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.nodes_where_predicate.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.number_of_edges.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.number_of_interface_nodes.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.number_of_nodes.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.rotate_assembly.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.set_boundary_condition.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.set_boundary_conditions.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.sha256.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.shortest_path.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.smooth.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.split_edge.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.subset.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.summary.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.to_data.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.to_json.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.to_jsonstring.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.to_lines.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.to_networkx.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.to_nodes_and_edges.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.to_obj.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.to_points.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.transform.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.transformed.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.unset_edge_attribute.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.unset_node_attribute.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.update_dea.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.update_default_edge_attributes.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.update_default_node_attributes.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.update_dna.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.uv_index.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.validate_data.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.validate_json.rst", "api/generated/compas_cra.datastructures.assembly_interfaces_numpy.rst", "api/generated/compas_cra.equilibrium.cra_penalty_solve.rst", "api/generated/compas_cra.equilibrium.cra_solve.rst", "api/generated/compas_cra.equilibrium.make_aeq.rst", "api/generated/compas_cra.equilibrium.make_afr.rst", "api/generated/compas_cra.equilibrium.unit_basis.rst", "examples.rst", "examples/armadillo.rst", "examples/bridge.rst", "examples/cubes.rst", "examples/shelf.rst", "examples/snake.rst", "examples/stacks.rst", "examples/wedge.rst", "index.rst", "installation.rst", "license.rst", "tutorial.rst"], "titles": ["API Reference", "compas_cra", "datastructures", "equilibrium", "&lt;no title&gt;", "CRA_Assembly", "CRA_Assembly.ToString", "CRA_Assembly.add_block", "CRA_Assembly.add_blocks_from_polysurfaces", "CRA_Assembly.add_blocks_from_rhinomeshes", "CRA_Assembly.add_edge", "CRA_Assembly.add_interface", "CRA_Assembly.add_interface_to_interfaces", "CRA_Assembly.add_interfaces_from_meshes", "CRA_Assembly.add_node", "CRA_Assembly.add_to_interfaces", "CRA_Assembly.adjacency_matrix", "CRA_Assembly.clear", "CRA_Assembly.complement", "CRA_Assembly.connected_edges", "CRA_Assembly.connectivity_matrix", "CRA_Assembly.copy", "CRA_Assembly.count_crossings", "CRA_Assembly.degree", "CRA_Assembly.degree_in", "CRA_Assembly.degree_matrix", "CRA_Assembly.degree_out", "CRA_Assembly.delete_edge", "CRA_Assembly.delete_node", "CRA_Assembly.edge_attribute", "CRA_Assembly.edge_attributes", "CRA_Assembly.edge_coordinates", "CRA_Assembly.edge_direction", "CRA_Assembly.edge_length", "CRA_Assembly.edge_midpoint", "CRA_Assembly.edge_point", "CRA_Assembly.edge_sample", "CRA_Assembly.edge_vector", "CRA_Assembly.edges", "CRA_Assembly.edges_attribute", "CRA_Assembly.edges_attributes", "CRA_Assembly.edges_where", "CRA_Assembly.edges_where_predicate", "CRA_Assembly.embed_in_plane", "CRA_Assembly.find_crossings", "CRA_Assembly.find_cycles", "CRA_Assembly.from_data", "CRA_Assembly.from_edges", "CRA_Assembly.from_geometry", "CRA_Assembly.from_json", "CRA_Assembly.from_jsonstring", "CRA_Assembly.from_lines", "CRA_Assembly.from_networkx", "CRA_Assembly.from_nodes_and_edges", "CRA_Assembly.from_obj", "CRA_Assembly.from_pointcloud", "CRA_Assembly.get_any_edge", "CRA_Assembly.get_any_edges", "CRA_Assembly.get_any_node", "CRA_Assembly.get_any_nodes", "CRA_Assembly.get_weight_mean", "CRA_Assembly.get_weight_total", "CRA_Assembly.gkey_key", "CRA_Assembly.gkey_node", "CRA_Assembly.has_edge", "CRA_Assembly.has_node", "CRA_Assembly.index_key", "CRA_Assembly.index_uv", "CRA_Assembly.is_block_support", "CRA_Assembly.is_connected", "CRA_Assembly.is_crossed", "CRA_Assembly.is_leaf", "CRA_Assembly.is_node_connected", "CRA_Assembly.is_planar", "CRA_Assembly.is_planar_embedding", "CRA_Assembly.is_xy", "CRA_Assembly.key_gkey", "CRA_Assembly.key_index", "CRA_Assembly.laplacian_matrix", "CRA_Assembly.leaves", "CRA_Assembly.move_block", "CRA_Assembly.neighborhood", "CRA_Assembly.neighbors", "CRA_Assembly.neighbors_in", "CRA_Assembly.neighbors_out", "CRA_Assembly.network_adjacency_matrix", "CRA_Assembly.network_connectivity_matrix", "CRA_Assembly.network_degree_matrix", "CRA_Assembly.network_embed_in_plane", "CRA_Assembly.network_is_planar", "CRA_Assembly.network_is_planar_embedding", "CRA_Assembly.network_laplacian_matrix", "CRA_Assembly.node_attribute", "CRA_Assembly.node_attributes", "CRA_Assembly.node_coordinates", "CRA_Assembly.node_gkey", "CRA_Assembly.node_laplacian", "CRA_Assembly.node_neighborhood_centroid", "CRA_Assembly.node_sample", "CRA_Assembly.nodes", "CRA_Assembly.nodes_attribute", "CRA_Assembly.nodes_attributes", "CRA_Assembly.nodes_where", "CRA_Assembly.nodes_where_predicate", "CRA_Assembly.number_of_edges", "CRA_Assembly.number_of_interface_nodes", "CRA_Assembly.number_of_nodes", "CRA_Assembly.rotate_assembly", "CRA_Assembly.set_boundary_condition", "CRA_Assembly.set_boundary_conditions", "CRA_Assembly.sha256", "CRA_Assembly.shortest_path", "CRA_Assembly.smooth", "CRA_Assembly.split_edge", "CRA_Assembly.subset", "CRA_Assembly.summary", "CRA_Assembly.to_data", "CRA_Assembly.to_json", "CRA_Assembly.to_jsonstring", "CRA_Assembly.to_lines", "CRA_Assembly.to_networkx", "CRA_Assembly.to_nodes_and_edges", "CRA_Assembly.to_obj", "CRA_Assembly.to_points", "CRA_Assembly.transform", "CRA_Assembly.transformed", "CRA_Assembly.unset_edge_attribute", "CRA_Assembly.unset_node_attribute", "CRA_Assembly.update_dea", "CRA_Assembly.update_default_edge_attributes", "CRA_Assembly.update_default_node_attributes", "CRA_Assembly.update_dna", "CRA_Assembly.uv_index", "CRA_Assembly.validate_data", "CRA_Assembly.validate_json", "assembly_interfaces_numpy", "cra_penalty_solve", "cra_solve", "make_aeq", "make_afr", "unit_basis", "Examples", "Armadillo Vault", "Bridge", "Cubes", "Shelf", "Snake", "Stacks", "Wedge", "Introduction", "Installation", "License", "Tutorial"], "terms": {"compas_cra": [0, 5, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150], "datastructur": [1, 5, 7, 16, 18, 20, 25, 48, 69, 78, 85, 86, 87, 91, 110, 135, 142, 143, 144, 145, 146, 147, 148, 149], "equilibrium": [1, 136, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149], "class": [5, 6], "sourc": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140], "base": [5, 149], "assembli": [5, 7, 8, 9, 48, 60, 61, 107, 114, 124, 125, 135, 136, 137, 138, 140, 142, 143, 144, 145, 146, 147, 148, 149], "extend": 5, "data": [5, 7, 16, 17, 20, 21, 25, 38, 41, 42, 46, 48, 49, 50, 54, 69, 78, 85, 86, 87, 91, 99, 102, 103, 110, 111, 116, 117, 118, 133, 134, 142, 143, 144, 145, 146, 148], "structur": [5, 7, 20, 45, 48, 69, 78, 86, 91, 111, 149], "concav": [5, 135], "method": [5, 6, 149], "inherit": 5, "convert": [6, 116], "instanc": [6, 46, 47, 49, 50, 52, 120], "string": [6, 49, 50, 54, 62, 63, 76, 95, 117, 118, 122], "thi": [6, 21, 22, 44, 45, 46, 49, 50, 70, 73, 89, 124, 125, 148, 149, 150, 151], "exist": [6, 29, 30, 39, 40, 69, 73, 89, 92, 93, 100, 101, 126, 127], "net": 6, "compat": 6, "when": [6, 29, 92, 149], "us": [6, 14, 29, 30, 39, 40, 42, 43, 45, 51, 54, 56, 57, 58, 59, 62, 63, 73, 76, 78, 88, 89, 91, 92, 93, 95, 100, 101, 103, 110, 136, 137, 149, 151], "ironpython": 6, "implicit": 6, "convers": 6, "usual": 6, "take": [6, 42, 45, 103], "place": [6, 124], "cpython": 6, "kick": 6, "its": [6, 10, 14, 38, 41, 42, 96, 102, 103, 112, 113, 116, 133, 134], "default": [6, 7, 14, 21, 126, 127, 128, 129, 130, 131, 135], "print": [6, 142, 144, 145, 146, 148], "self": 6, "gettyp": 6, "fullnam": 6, "similar": 6, "overrid": 6, "object": [6, 16, 21, 22, 25, 29, 43, 44, 45, 46, 48, 49, 50, 51, 53, 54, 55, 70, 73, 74, 75, 85, 87, 88, 89, 90, 112, 116, 117, 118, 122, 133, 134], "fix": [6, 43, 88, 112], "make": [6, 21], "rhino": [6, 8, 9], "grasshopp": 6, "displai": 6, "proper": 6, "represent": [6, 8, 9, 116, 117, 118, 134], "ar": [6, 7, 45, 113, 149], "connect": [6, 19, 20, 51, 54, 55, 59, 69, 72, 86, 151], "panel": 6, "other": [6, 151], "type": [6, 14, 15, 21, 45, 46, 48, 49, 50], "output": 6, "block": [7, 8, 9, 48, 68, 80, 108, 109, 114, 135, 143, 147, 149, 151], "kei": [7, 8, 9, 14, 19, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 44, 53, 62, 63, 65, 66, 67, 68, 71, 72, 76, 77, 80, 81, 82, 83, 84, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 108, 109, 113, 126, 127, 132, 147], "none": [7, 10, 14, 17, 18, 21, 27, 28, 29, 30, 39, 40, 41, 43, 45, 51, 54, 62, 63, 76, 88, 92, 93, 95, 100, 101, 102, 112, 117, 122, 126, 128, 129, 130, 131], "attr_dict": [7, 10, 14, 128, 129, 130, 131], "kwattr": [7, 10, 14, 128, 129, 130, 131], "add": [7, 8, 9, 10, 12, 13, 14, 15, 150], "paramet": [7, 8, 9, 10, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 62, 63, 64, 65, 69, 70, 71, 72, 73, 74, 75, 76, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 110, 111, 112, 113, 114, 117, 118, 122, 124, 125, 126, 127, 128, 129, 130, 131, 135], "compas_assembli": [7, 48, 147], "The": [7, 8, 9, 10, 14, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 71, 72, 76, 81, 82, 83, 84, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 111, 112, 113, 114, 115, 116, 117, 118, 124, 125, 126, 127, 133, 134, 149, 151], "dict": [7, 10, 14, 30, 38, 40, 41, 42, 46, 53, 62, 63, 66, 67, 76, 77, 93, 95, 99, 101, 102, 103, 116, 118, 126, 127, 128, 129, 130, 131, 132, 133], "option": [7, 10, 14, 16, 20, 21, 25, 29, 30, 31, 35, 36, 38, 39, 40, 41, 42, 43, 45, 51, 54, 55, 59, 62, 63, 64, 76, 78, 81, 85, 86, 87, 88, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 110, 112, 113, 117, 118, 128, 129, 130, 131, 135], "A": [7, 8, 9, 10, 14, 18, 22, 30, 39, 40, 41, 43, 44, 48, 51, 53, 54, 55, 62, 63, 66, 67, 69, 70, 71, 73, 74, 75, 76, 77, 79, 81, 82, 83, 84, 88, 89, 90, 93, 95, 100, 101, 102, 111, 112, 119, 120, 121, 122, 123, 128, 129, 130, 131, 132, 151], "dictionari": [7, 10, 14, 30, 46, 53, 62, 63, 66, 67, 76, 77, 93, 95, 128, 129, 130, 131, 132], "attribut": [7, 10, 14, 15, 29, 30, 38, 39, 40, 41, 42, 92, 93, 99, 100, 101, 102, 103, 126, 127, 128, 129, 130, 131, 143], "i": [7, 14, 18, 29, 30, 35, 38, 39, 40, 41, 42, 43, 45, 51, 54, 64, 65, 68, 69, 71, 72, 73, 74, 75, 78, 88, 89, 90, 91, 92, 93, 99, 100, 101, 102, 103, 112, 113, 114, 124, 132, 135, 145, 147, 149, 151], "return": [7, 8, 9, 10, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 103, 104, 105, 106, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 128, 129, 130, 131, 132, 133, 134, 142], "hashabl": [7, 10, 14, 19, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 53, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 71, 72, 76, 77, 79, 81, 82, 83, 84, 88, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 111, 113, 121, 126, 132], "identifi": [7, 8, 9, 10, 14, 19, 23, 24, 26, 27, 28, 29, 30, 36, 38, 39, 40, 41, 42, 44, 47, 56, 57, 58, 59, 64, 65, 71, 72, 77, 79, 81, 82, 83, 84, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 111, 114, 126, 127, 135, 142], "note": [7, 14, 22, 44, 45, 69, 70, 71, 73, 78, 89, 91, 124, 126, 127], "ad": [7, 8, 9], "node": [7, 10, 14, 16, 19, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 42, 47, 53, 55, 58, 59, 62, 63, 64, 65, 66, 71, 72, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 111, 112, 113, 114, 121, 127, 130, 131, 143, 147], "xyz": [7, 31, 34, 35, 78, 91, 94, 121], "coordin": [7, 31, 34, 35, 51, 53, 75, 94, 97, 119, 121, 123], "centroid": [7, 78, 91, 96, 97, 112], "guid": [8, 9, 149], "multipl": [8, 9, 30, 39, 40, 93, 100, 101], "from": [8, 9, 13, 15, 16, 18, 20, 25, 27, 28, 37, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59, 69, 78, 85, 86, 87, 91, 96, 110, 111, 120, 135, 142, 143, 144, 145, 146, 147, 148, 149, 151], "poli": 8, "surfac": 8, "list": [8, 9, 16, 19, 20, 25, 30, 31, 32, 34, 35, 36, 37, 39, 40, 44, 45, 47, 51, 53, 57, 59, 66, 67, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 91, 93, 94, 96, 97, 98, 100, 101, 111, 112, 114, 119, 121, 123, 132], "str": [8, 9, 10, 14, 29, 30, 31, 38, 39, 40, 41, 42, 50, 51, 54, 62, 63, 76, 92, 93, 94, 95, 99, 100, 101, 102, 103, 110, 113, 115, 118, 126, 127, 128, 129, 130, 131, 134], "repres": [8, 9, 44, 51, 121], "exampl": [8, 9, 10, 14, 18, 27, 28, 42, 45, 69, 103, 110, 114, 124, 125, 135, 143, 144, 145, 146, 147, 148, 149], "compas_rhino": [8, 9], "select_surfac": 8, "mesh": [9, 13, 110, 112, 147], "select_mesh": 9, "u": [10, 12, 13, 15, 18, 27, 31, 32, 33, 34, 35, 37, 38, 41, 42, 64, 113], "v": [10, 12, 13, 15, 18, 27, 31, 32, 33, 34, 35, 37, 38, 41, 42, 64, 113], "an": [10, 14, 21, 27, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 42, 45, 46, 48, 49, 50, 54, 73, 89, 92, 100, 101, 114, 116, 117, 118, 122, 126, 135, 149, 151], "edg": [10, 11, 12, 13, 15, 18, 19, 22, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 44, 47, 53, 56, 57, 59, 64, 67, 70, 73, 74, 89, 90, 104, 113, 121, 126, 128, 129, 132], "specifi": [10, 14, 53, 62, 63, 76, 95], "first": [10, 27, 64, 113], "second": [10, 27, 64, 113], "ani": [10, 14, 18, 30, 38, 39, 40, 41, 42, 45, 93, 99, 100, 101, 102, 103, 128, 129, 130, 131, 151], "addit": [10, 14, 38, 41, 42, 73, 89, 99, 102, 103, 128, 129, 130, 131, 149], "compil": [10, 14, 128, 129, 130, 131], "remain": [10, 14, 128, 129, 130, 131], "name": [10, 14, 29, 30, 39, 40, 41, 92, 93, 100, 101, 102, 126, 127, 128, 129, 130, 131], "argument": [10, 14, 41, 112, 128, 129, 130, 131], "tupl": [10, 19, 29, 30, 36, 38, 39, 40, 41, 42, 44, 47, 51, 53, 56, 57, 67, 99, 102, 103, 119, 121, 126, 132], "interfac": [11, 12, 13, 15, 105, 135, 140, 142, 149], "which": [14, 31, 41, 42, 45, 102, 103], "case": 14, "int": [14, 22, 23, 24, 26, 36, 55, 57, 59, 66, 67, 77, 81, 98, 104, 105, 106, 112, 127, 132, 135], "automat": 14, "gener": [14, 18], "vertex": [14, 44, 45, 56, 67, 132], "If": [14, 29, 30, 35, 38, 39, 40, 41, 42, 43, 59, 64, 73, 78, 88, 89, 91, 92, 93, 99, 100, 101, 102, 103, 110, 112, 113, 117, 118, 126, 127], "provid": [14, 30, 41, 46, 101, 112, 151], "one": [14, 59, 70, 71], "increment": 14, "highest": 14, "integ": 14, "1": [14, 18, 35, 36, 56, 57, 58, 59, 60, 61, 78, 81, 91, 96, 98, 110, 113, 124, 125, 135, 136, 137, 143, 145, 146, 147, 148, 150], "graph": [14, 18, 28, 47, 52, 104, 106, 115, 120, 143], "0": [14, 35, 80, 110, 112, 113, 124, 125, 135, 136, 137, 139, 142, 143, 144, 145, 146, 147, 148], "size": [15, 36, 81, 98], "point": [15, 31, 35, 43, 51, 53, 54, 55, 78, 88, 91, 119, 122], "frame": [15, 147], "rtype": [16, 20, 25, 78, 85, 86, 87, 91], "arrai": [16, 20, 25, 77, 78, 85, 86, 87, 91, 132], "creat": [16, 20, 25, 47, 52, 85, 86, 87, 114, 120, 138, 139, 140, 150], "adjac": [16, 85], "matrix": [16, 20, 25, 78, 85, 86, 87, 91, 124, 125, 138, 139], "network": [16, 17, 18, 20, 22, 25, 27, 38, 43, 44, 45, 51, 53, 54, 55, 64, 65, 69, 70, 73, 74, 75, 78, 79, 85, 86, 87, 88, 89, 90, 91, 99, 111, 112, 119, 121, 122, 123], "obj": [16, 18, 25, 29, 39, 54, 69, 85, 87, 92, 100, 110, 122], "get": [16, 18, 25, 29, 30, 36, 39, 40, 41, 42, 56, 57, 58, 59, 60, 61, 69, 85, 87, 92, 93, 98, 100, 101, 102, 103, 110], "liter": [16, 20, 25, 78, 85, 86, 87, 91], "csc": [16, 20, 25, 78, 85, 86, 87, 91], "csr": [16, 20, 25, 78, 85, 86, 87, 91], "coo": [16, 20, 25, 78, 85, 86, 87, 91], "format": [16, 20, 25, 62, 63, 76, 78, 85, 86, 87, 91, 95, 110, 115, 118], "result": [16, 20, 25, 48, 78, 85, 86, 87, 91, 142, 143, 144, 145, 146, 147, 148], "array_lik": [16, 20, 25, 78, 85, 86, 87, 91], "construct": [16, 20, 25, 46, 48, 49, 50, 51, 53, 54, 55, 78, 85, 86, 87, 91], "all": [17, 30, 40, 44, 75, 79, 93, 150, 151], "cl": [18, 21, 142, 143, 144, 145, 146, 148], "g": [18, 150], "h": 18, "same": [18, 45], "vertic": [18, 45, 69, 75, 123], "whose": 18, "consist": 18, "present": [18, 64, 65], "refer": [18, 135, 140, 149, 150], "wolfram": 18, "mathworld": 18, "avail": [18, 73, 89], "http": [18, 73, 89, 149, 150], "com": [18, 150], "graphcompl": 18, "html": 18, "import": [18, 69, 110, 142, 143, 144, 145, 146, 147, 148], "compa": [18, 69, 110, 142, 143, 144, 145, 146, 147, 148, 149], "network_compl": 18, "from_obj": [18, 69, 110], "line": [18, 43, 45, 51, 54, 69, 73, 88, 89, 119], "has_edg": 18, "direct": [18, 32, 35, 45, 52, 64], "fals": [18, 38, 41, 42, 43, 59, 64, 65, 69, 70, 71, 72, 73, 75, 78, 88, 89, 91, 99, 102, 103, 110, 117, 118, 136, 137, 138, 142, 143, 144, 145, 146, 147, 148], "independ": 21, "current": [21, 78, 91, 114], "count": 22, "number": [22, 23, 24, 26, 55, 57, 59, 104, 105, 106, 112, 135], "cross": [22, 44, 70, 73, 74, 89, 90], "pair": [22, 29, 30, 41, 44, 47, 51, 56, 62, 63, 66, 67, 70, 76, 77, 93, 95, 102, 119, 121, 132], "algorithm": [22, 44, 45, 70, 110], "assum": [22, 44, 70], "li": [22, 44, 70, 75], "xy": [22, 44, 70, 75], "plane": [22, 43, 44, 70, 73, 74, 75, 88, 89, 90, 135], "neighbor": [23, 24, 26, 45, 71, 83, 84, 97, 112, 113], "numer": 24, "incom": [24, 83], "degre": [25, 55, 87, 147, 148], "outgo": [26, 84], "delet": [27, 28], "valu": [29, 30, 35, 39, 40, 41, 78, 91, 92, 93, 100, 101, 102, 126, 127, 128, 129, 130, 131], "set": [29, 30, 36, 39, 40, 41, 42, 51, 57, 59, 92, 93, 98, 100, 101, 102, 103, 108, 109, 126, 127], "function": [29, 30, 39, 40, 41, 42, 73, 89, 92, 93, 100, 101, 103, 112], "setter": [29, 30, 39, 40, 92, 93, 100, 101], "rais": [29, 30, 39, 40, 43, 73, 88, 89, 92, 93, 100, 101, 112, 113, 126, 127, 133, 134], "keyerror": [29, 30, 39, 40, 92, 93, 100, 101, 126, 127], "doe": [29, 30, 39, 40, 92, 93, 100, 101, 126, 127], "empti": [30, 40, 93], "correspond": [30, 40, 62, 63, 67, 76, 77, 93, 95, 101, 132], "ax": [31, 94], "start": [31, 32, 33, 34, 35, 37, 51, 111, 119], "end": [31, 32, 33, 34, 35, 37, 51, 111, 119], "along": [31, 35, 113], "should": [31, 41, 42, 45, 102, 103, 114], "includ": [31, 114, 151], "float": [31, 32, 33, 34, 35, 37, 51, 53, 62, 63, 76, 94, 95, 96, 97, 112, 113, 119, 121, 123, 135, 137], "vector": [32, 35, 37, 78, 80, 91, 96], "length": [33, 113], "locat": [34, 35, 150], "midpoint": 34, "t": [35, 113, 124, 125], "5": [35, 112, 113, 143, 144, 147, 148], "outsid": [35, 45], "rang": [35, 41, 102, 113, 145], "lie": 35, "random": [36, 55, 56, 57, 58, 59, 98], "sampl": [36, 98], "iter": [38, 99, 112], "over": [38, 99], "bool": [38, 41, 42, 43, 59, 64, 65, 69, 70, 71, 72, 73, 74, 75, 78, 88, 89, 90, 91, 99, 102, 103, 110, 117, 118, 135, 137], "true": [38, 41, 42, 43, 59, 64, 65, 69, 70, 71, 72, 73, 74, 75, 78, 88, 89, 90, 91, 99, 102, 103, 110, 117, 118, 135, 138, 142, 143, 144, 145, 146, 147, 148], "yield": [38, 41, 42, 99, 102, 103], "next": [38, 41, 42, 99, 102, 103], "attr": [38, 41, 42, 99], "contain": [39, 40, 46, 49, 50, 54, 64, 101, 117], "per": [39, 40, 55, 101, 135], "request": [39, 40, 93], "condit": [41, 42, 102, 103, 108, 109, 151], "kwarg": [41, 102], "certain": [41, 42, 62, 63, 76, 95, 102, 103], "form": [41, 56, 102, 149], "can": [41, 73, 89, 102], "min": [41, 102], "max": [41, 102], "predic": [42, 103], "lambda": [42, 103], "callabl": [42, 103, 112], "you": [42, 103, 149], "want": [42, 103], "evalu": [42, 103], "2": [42, 103, 124, 125, 143, 144, 146, 147, 148], "straightlin": [43, 88], "emb": [43, 88], "two": [43, 44, 69, 88, 111], "straight": [43, 45, 73, 88, 89], "onli": [43, 59, 71, 88], "embed": [43, 45, 73, 74, 88, 89, 90], "wa": [43, 88], "success": [43, 88], "otherwis": [43, 64, 69, 70, 73, 74, 75, 88, 89, 90, 151], "importerror": [43, 73, 88, 89], "networkx": [43, 52, 88, 120], "instal": [43, 73, 88, 89, 149], "each": [44, 45, 100, 119, 121], "breakpoint": 45, "find": [45, 111, 149, 150], "face": [45, 110, 135], "break": 45, "found": [45, 150], "primarili": 45, "up": [45, 76, 95], "between": [45, 55, 111, 135], "specif": [45, 64, 65, 72], "For": 45, "applic": 45, "involv": [45, 149], "dual": 45, "diagram": 45, "where": 45, "extern": 45, "forc": [45, 149], "appli": 45, "load": [45, 142], "reaction": 45, "input": 45, "essenti": 45, "wall": 45, "follow": [45, 151], "maze": 45, "solv": 45, "It": [45, 73, 89], "reli": 45, "geometri": [45, 48, 147, 148, 149], "repes": 45, "planar": [45, 73, 89], "determin": 45, "order": 45, "around": [45, 147, 148], "alwai": 45, "turn": 45, "classmethod": [46, 47, 48, 49, 50, 51, 52, 53, 54, 55], "ha": [46, 49, 50, 70, 71], "correct": [46, 49, 50], "schema": [46, 49, 50, 116, 133, 134], "new": [47, 52, 120, 150], "inform": 47, "about": [47, 149], "particular": [48, 151], "filepath": [49, 54, 117, 122], "serial": [49, 50, 117, 118], "json": [49, 50, 117, 118, 124, 125, 134, 142, 143, 144, 145, 146, 148], "file": [49, 50, 54, 117, 122, 151], "path": [49, 54, 69, 111, 117, 122, 142, 143, 144, 145, 146, 148], "like": [49, 54, 117, 122], "url": [49, 54], "precis": [51, 54, 62, 63, 76, 95], "geometr": [51, 54, 62, 63, 76, 95], "map": [51, 54, 62, 63, 66, 67, 76, 77, 95, 132], "digraph": [52, 120], "hshabl": 53, "cloud": 55, "3": [55, 56, 57, 58, 59, 143, 145, 146, 147, 148], "pointcloud": 55, "deprec": [56, 57, 58, 59], "sinc": [56, 57, 58, 59], "version": [56, 57, 58, 59, 110], "13": [56, 57, 58, 59, 143], "edge_sampl": [56, 57], "instead": [56, 57, 58, 59], "n": [57, 59, 98, 150], "node_sampl": [58, 59], "exclude_leav": 59, "exclud": 59, "leav": 59, "densiti": [60, 61, 136, 137, 143, 145, 146], "mean": 60, "weight": [60, 61, 142, 143, 145, 146], "total": [61, 105], "verifi": [64, 65, 69, 70, 71, 72, 74, 75, 90], "taken": 64, "account": 64, "indic": [66, 121], "index": [66, 67, 77, 132, 149], "uv": [67, 132], "check": [68, 73, 89], "support": [68, 147], "everi": [69, 112], "them": 69, "network_is_connect": 69, "least": 70, "leaf": 71, "packag": [73, 89], "drawn": [73, 89], "without": [73, 74, 89, 90, 151], "shown": [73, 89], "furthermor": [73, 89], "python": [73, 89, 142, 143, 144, 145, 146, 147, 148], "bind": [73, 89], "suit": [73, 89], "anaconda": [73, 89], "org": [73, 89, 149], "conda": [73, 89], "forg": [73, 89, 150], "fase": [74, 90], "z": [75, 110, 147], "zero": 75, "normal": [78, 91], "laplacian": [78, 91, 96], "entri": [78, 91], "diagon": [78, 91], "d": [78, 91, 143, 145, 146, 148], "l": [78, 91], "dot": [78, 91], "therefor": [78, 91], "c": [78, 91, 147, 148, 150], "By": [78, 91], "chang": [78, 91], "sign": [78, 91], "dsiplac": [78, 91], "could": [78, 91], "more": [78, 91, 149], "natur": [78, 91], "wai": [78, 91], "move": [80, 112], "ring": [81, 96], "compon": 94, "neighborhood": 96, "comput": [97, 104, 105, 106, 110, 149], "match": [102, 103], "o": [107, 142, 143, 144, 145, 146, 148], "axi": [107, 147, 148], "rad": [107, 147, 148], "rotat": [107, 124, 125, 147, 148], "entir": 107, "boundari": [108, 109], "as_str": 110, "hash": 110, "comparison": 110, "dure": 110, "control": 110, "digest": 110, "hexadecim": 110, "rather": 110, "than": 110, "byte": 110, "v1": 110, "v2": 110, "vertex_attribut": 110, "vertex_sampl": 110, "v3": 110, "shortest": 111, "lead": 111, "kmax": 112, "100": 112, "damp": 112, "callback": 112, "callback_arg": 112, "free": [112, 149, 151], "maximum": [112, 135], "factor": 112, "user": [112, 149], "defin": [112, 119], "execut": [112, 150], "after": 112, "pass": [112, 135], "except": [112, 113, 134], "split": 113, "insert": 113, "posit": 113, "valueerror": 113, "sub": 114, "nativ": 116, "describ": [116, 149], "pretti": [117, 118], "human": 117, "readabl": 117, "": [118, 133, 134, 149], "newli": 120, "write": 122, "given": [124, 125], "No": [124, 150], "copi": [124, 125, 142, 143, 144, 145, 146, 148, 151], "made": 124, "from_json": [124, 125], "r": [124, 125, 150], "from_axis_and_angl": [124, 125], "pi": [124, 125, 147, 148], "assembly_transform": [124, 125], "unset": [126, 127], "implicitli": [126, 127], "back": [126, 127], "store": [126, 127], "updat": [128, 129, 130, 131], "e": 132, "valid": [133, 134], "against": [133, 134], "schemaerror": 133, "jsonschema": 134, "validationerror": 134, "nmax": [135, 144, 148], "10": [135, 143, 144, 145, 147, 148, 149], "tmax": [135, 142, 143, 144, 145, 146, 148], "1e": [135, 143, 144, 145, 146, 148], "06": 135, "amin": [135, 142, 143, 144, 145, 146, 148], "cra_assembli": [135, 142, 143, 144, 145, 146, 147, 148], "discret": [135, 149], "neighbour": 135, "deviat": 135, "perfectli": 135, "flat": 135, "6": [135, 143, 145], "minimum": 135, "area": 135, "mu": [136, 137, 139, 143, 145, 146, 148], "84": [136, 137, 148], "d_bnd": [136, 137, 143, 145, 146, 148], "001": [136, 137], "ep": [136, 137, 143, 145, 146], "0001": [136, 137, 142], "timer": [136, 137, 144, 147, 148], "verbos": [136, 137, 143, 144, 145, 146, 147, 148], "cra": [136, 137, 142, 149, 150], "solver": [136, 137, 150], "penalti": [136, 149], "formul": [136, 149], "pyomo": [136, 137, 150], "ipopt": [136, 137, 150], "return_vcount": 138, "flip": 138, "aeq": 138, "total_vcount": 139, "fcon_numb": 139, "8": [139, 142, 143, 144, 145, 146, 147, 148], "friction": [139, 148], "afr": 139, "system": 140, "unit": 140, "basi": 140, "armadillo": [141, 149], "vault": [141, 149], "bridg": [141, 149], "cube": [141, 143, 145, 146, 147, 149], "shelf": [141, 149], "snake": [141, 149], "stack": [141, 143, 144, 145, 146, 149], "wedg": [141, 149], "usr": [142, 143, 144, 145, 146, 147, 148], "bin": [142, 143, 144, 145, 146, 147, 148], "env": [142, 143, 144, 145, 146, 147, 148], "code": [142, 143, 144, 145, 146, 147, 148], "utf": [142, 143, 144, 145, 146, 147, 148], "visualis": 142, "__author__": [142, 143, 144, 145, 146, 147, 148], "gene": [142, 143, 144, 145, 146, 147, 148, 149, 151], "ting": [142, 143, 144, 145, 146, 147, 148, 149, 151], "chun": [142, 143, 144, 145, 146, 147, 148, 149, 151], "kao": [142, 143, 144, 145, 146, 147, 148, 149, 151], "__email__": [142, 143, 144, 145, 146, 147, 148], "arch": [142, 143, 144, 145, 146, 147, 148], "ethz": [142, 143, 144, 145, 146, 147, 148], "ch": [142, 143, 144, 145, 146, 147, 148], "def": 142, "load_result": 142, "json_load": [142, 143, 144, 145, 146, 148], "join": [142, 143, 144, 145, 146, 148], "armadillo_cra": 142, "identify_interfac": 142, "assembly_interfaces_numpi": [142, 143, 144, 145, 146, 148], "05": 142, "__name__": [142, 143, 144, 145, 146, 147, 148], "__main__": [142, 143, 144, 145, 146, 147, 148], "viewer": [142, 143, 144, 145, 146, 147, 148], "cra_view": [142, 143, 144, 145, 146, 147, 148], "show": [142, 149], "precalcul": 142, "load_from_result": 142, "els": 142, "nodal": [142, 143, 144, 145, 146, 147, 148], "grid": [142, 143, 144, 145, 146, 147, 148], "forceslin": 142, "forcesdirect": 142, "displac": [142, 143, 144, 145, 146, 147, 148], "dispscal": [142, 143, 144, 145, 146, 147, 148], "scale": [142, 143, 144, 145, 146, 148], "300": 142, "simpl": [143, 144, 145, 146, 147], "calcul": [143, 144, 145, 146, 147], "three": [143, 144, 145, 146, 147, 149], "cra_solv": [143, 144, 145, 146, 147, 148], "cra_penalty_solv": [143, 145, 146], "set_boundary_condit": [143, 144, 145, 146, 147, 148], "node_attribut": 143, "11": [143, 145], "12": [143, 145], "14": 143, "15": 143, "51": 143, "delete_nod": [143, 145, 146], "4": [143, 145, 146], "7": [143, 146], "9": [143, 145], "dispbnd": [143, 145, 146], "overlap": [143, 145, 146], "box": [144, 147], "math": [147, 148], "mt": [147, 148], "translat": 147, "worldxi": 147, "free1": 147, "transform": 147, "from_vector": 147, "free2": 147, "add_block": 147, "from_shap": 147, "interface1": 147, "corner": 147, "enumer": 147, "add_vertex": 147, "x": [147, 148], "y": [147, 148], "add_fac": 147, "interface2": 147, "add_interfaces_from_mesh": 147, "deg": [147, 148], "20": 147, "180": [147, 148], "rotate_assembli": [147, 148], "90": 148, "respect": 148, "simul": 148, "coeffici": 148, "sqrt": 148, "xy30": 148, "coupl": 149, "rigid": 149, "analysi": 149, "framework": 149, "To": 149, "out": [149, 151], "pleas": [149, 150], "our": 149, "paper": 149, "cad": 149, "aid": 149, "design": 149, "journal": 149, "doi": 149, "1016": 149, "j": 149, "2022": 149, "103216": 149, "stabil": 149, "awar": 149, "complex": 149, "element": 149, "rbe": 149, "measur": 149, "infeas": 149, "stabl": 149, "unstabl": 149, "howev": 149, "pure": 149, "incorrectli": 149, "overcom": 149, "issu": [149, 150], "introduc": 149, "robust": 149, "approach": 149, "build": 149, "upon": 149, "strength": 149, "combin": 149, "kinemat": 149, "nonlinear": 149, "program": 149, "problem": 149, "extens": 149, "benchmark": 149, "campaign": 149, "how": 149, "enabl": 149, "accur": 149, "model": 149, "dimension": 149, "In": 149, "interact": 149, "process": 149, "toward": 149, "sound": 149, "propos": 149, "final": 149, "potenti": 149, "real": 149, "world": 149, "demonstr": 149, "scaffold": 149, "physic": 149, "develop": 149, "implement": 149, "et": 149, "al": 149, "cite": 149, "work": 149, "your": 149, "research": [149, 151], "articl": 149, "kao2022coupl": 149, "titl": 149, "author": [149, 151], "iannuzzo": 149, "antonino": 149, "thomaszewski": 149, "bernhard": 149, "coro": 149, "stelian": 149, "van": 149, "mele": 149, "tom": 149, "philipp": 149, "page": 149, "year": 149, "publish": [149, 151], "elsevi": 149, "tutori": 149, "api": 149, "licens": 149, "modul": 149, "environ": 150, "config": 150, "channel": 150, "activ": 150, "clone": 150, "git": 150, "github": 150, "blockresearchgroup": 150, "cd": 150, "depend": 150, "pip": 150, "requir": 150, "dev": 150, "txt": 150, "known": 150, "window": 150, "cannot": 150, "common": 150, "error": 150, "applicationerror": 150, "thread": 150, "solut": 150, "group": [150, 151], "googl": 150, "open": 150, "dsopf": 150, "wypbzp": 150, "hlcw": 150, "pli": 150, "mit": 151, "permiss": 151, "herebi": 151, "grant": 151, "charg": 151, "person": 151, "obtain": 151, "softwar": 151, "associ": 151, "document": 151, "deal": 151, "restrict": 151, "limit": 151, "right": 151, "modifi": 151, "merg": 151, "distribut": 151, "sublicens": 151, "sell": 151, "permit": 151, "whom": 151, "furnish": 151, "do": 151, "so": 151, "subject": 151, "abov": 151, "copyright": 151, "notic": 151, "shall": 151, "substanti": 151, "portion": 151, "THE": 151, "AS": 151, "warranti": 151, "OF": 151, "kind": 151, "express": 151, "OR": 151, "impli": 151, "BUT": 151, "NOT": 151, "TO": 151, "merchant": 151, "fit": 151, "FOR": 151, "purpos": 151, "AND": 151, "noninfring": 151, "IN": 151, "NO": 151, "event": 151, "holder": 151, "BE": 151, "liabl": 151, "claim": 151, "damag": 151, "liabil": 151, "whether": 151, "action": 151, "contract": 151, "tort": 151, "aris": 151, "WITH": 151}, "objects": {"": [[1, 0, 0, "-", "compas_cra"]], "compas_cra": [[2, 0, 0, "-", "datastructures"], [3, 0, 0, "-", "equilibrium"]], "compas_cra.datastructures": [[5, 1, 1, "", "CRA_Assembly"], [135, 3, 1, "", "assembly_interfaces_numpy"]], "compas_cra.datastructures.CRA_Assembly": [[6, 2, 1, "", "ToString"], [7, 2, 1, "", "add_block"], [8, 2, 1, "", "add_blocks_from_polysurfaces"], [9, 2, 1, "", "add_blocks_from_rhinomeshes"], [10, 2, 1, "", "add_edge"], [11, 2, 1, "", "add_interface"], [12, 2, 1, "", "add_interface_to_interfaces"], [13, 2, 1, "", "add_interfaces_from_meshes"], [14, 2, 1, "", "add_node"], [15, 2, 1, "", "add_to_interfaces"], [16, 2, 1, "", "adjacency_matrix"], [17, 2, 1, "", "clear"], [18, 2, 1, "", "complement"], [19, 2, 1, "", "connected_edges"], [20, 2, 1, "", "connectivity_matrix"], [21, 2, 1, "", "copy"], [22, 2, 1, "", "count_crossings"], [23, 2, 1, "", "degree"], [24, 2, 1, "", "degree_in"], [25, 2, 1, "", "degree_matrix"], [26, 2, 1, "", "degree_out"], [27, 2, 1, "", "delete_edge"], [28, 2, 1, "", "delete_node"], [29, 2, 1, "", "edge_attribute"], [30, 2, 1, "", "edge_attributes"], [31, 2, 1, "", "edge_coordinates"], [32, 2, 1, "", "edge_direction"], [33, 2, 1, "", "edge_length"], [34, 2, 1, "", "edge_midpoint"], [35, 2, 1, "", "edge_point"], [36, 2, 1, "", "edge_sample"], [37, 2, 1, "", "edge_vector"], [38, 2, 1, "", "edges"], [39, 2, 1, "", "edges_attribute"], [40, 2, 1, "", "edges_attributes"], [41, 2, 1, "", "edges_where"], [42, 2, 1, "", "edges_where_predicate"], [43, 2, 1, "", "embed_in_plane"], [44, 2, 1, "", "find_crossings"], [45, 2, 1, "", "find_cycles"], [46, 2, 1, "", "from_data"], [47, 2, 1, "", "from_edges"], [48, 2, 1, "", "from_geometry"], [49, 2, 1, "", "from_json"], [50, 2, 1, "", "from_jsonstring"], [51, 2, 1, "", "from_lines"], [52, 2, 1, "", "from_networkx"], [53, 2, 1, "", "from_nodes_and_edges"], [54, 2, 1, "", "from_obj"], [55, 2, 1, "", "from_pointcloud"], [56, 2, 1, "", "get_any_edge"], [57, 2, 1, "", "get_any_edges"], [58, 2, 1, "", "get_any_node"], [59, 2, 1, "", "get_any_nodes"], [60, 2, 1, "", "get_weight_mean"], [61, 2, 1, "", "get_weight_total"], [62, 2, 1, "", "gkey_key"], [63, 2, 1, "", "gkey_node"], [64, 2, 1, "", "has_edge"], [65, 2, 1, "", "has_node"], [66, 2, 1, "", "index_key"], [67, 2, 1, "", "index_uv"], [68, 2, 1, "", "is_block_support"], [69, 2, 1, "", "is_connected"], [70, 2, 1, "", "is_crossed"], [71, 2, 1, "", "is_leaf"], [72, 2, 1, "", "is_node_connected"], [73, 2, 1, "", "is_planar"], [74, 2, 1, "", "is_planar_embedding"], [75, 2, 1, "", "is_xy"], [76, 2, 1, "", "key_gkey"], [77, 2, 1, "", "key_index"], [78, 2, 1, "", "laplacian_matrix"], [79, 2, 1, "", "leaves"], [80, 2, 1, "", "move_block"], [81, 2, 1, "", "neighborhood"], [82, 2, 1, "", "neighbors"], [83, 2, 1, "", "neighbors_in"], [84, 2, 1, "", "neighbors_out"], [85, 2, 1, "", "network_adjacency_matrix"], [86, 2, 1, "", "network_connectivity_matrix"], [87, 2, 1, "", "network_degree_matrix"], [88, 2, 1, "", "network_embed_in_plane"], [89, 2, 1, "", "network_is_planar"], [90, 2, 1, "", "network_is_planar_embedding"], [91, 2, 1, "", "network_laplacian_matrix"], [92, 2, 1, "", "node_attribute"], [93, 2, 1, "", "node_attributes"], [94, 2, 1, "", "node_coordinates"], [95, 2, 1, "", "node_gkey"], [96, 2, 1, "", "node_laplacian"], [97, 2, 1, "", "node_neighborhood_centroid"], [98, 2, 1, "", "node_sample"], [99, 2, 1, "", "nodes"], [100, 2, 1, "", "nodes_attribute"], [101, 2, 1, "", "nodes_attributes"], [102, 2, 1, "", "nodes_where"], [103, 2, 1, "", "nodes_where_predicate"], [104, 2, 1, "", "number_of_edges"], [105, 2, 1, "", "number_of_interface_nodes"], [106, 2, 1, "", "number_of_nodes"], [107, 2, 1, "", "rotate_assembly"], [108, 2, 1, "", "set_boundary_condition"], [109, 2, 1, "", "set_boundary_conditions"], [110, 2, 1, "", "sha256"], [111, 2, 1, "", "shortest_path"], [112, 2, 1, "", "smooth"], [113, 2, 1, "", "split_edge"], [114, 2, 1, "", "subset"], [115, 2, 1, "", "summary"], [116, 2, 1, "", "to_data"], [117, 2, 1, "", "to_json"], [118, 2, 1, "", "to_jsonstring"], [119, 2, 1, "", "to_lines"], [120, 2, 1, "", "to_networkx"], [121, 2, 1, "", "to_nodes_and_edges"], [122, 2, 1, "", "to_obj"], [123, 2, 1, "", "to_points"], [124, 2, 1, "", "transform"], [125, 2, 1, "", "transformed"], [126, 2, 1, "", "unset_edge_attribute"], [127, 2, 1, "", "unset_node_attribute"], [128, 2, 1, "", "update_dea"], [129, 2, 1, "", "update_default_edge_attributes"], [130, 2, 1, "", "update_default_node_attributes"], [131, 2, 1, "", "update_dna"], [132, 2, 1, "", "uv_index"], [133, 2, 1, "", "validate_data"], [134, 2, 1, "", "validate_json"]], "compas_cra.equilibrium": [[136, 3, 1, "", "cra_penalty_solve"], [137, 3, 1, "", "cra_solve"], [138, 3, 1, "", "make_aeq"], [139, 3, 1, "", "make_afr"], [140, 3, 1, "", "unit_basis"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "titleterms": {"api": 0, "refer": 0, "compas_cra": 1, "datastructur": 2, "class": 2, "function": [2, 3], "equilibrium": 3, "solver": 3, "helper": 3, "cra_assembli": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134], "tostr": 6, "add_block": 7, "add_blocks_from_polysurfac": 8, "add_blocks_from_rhinomesh": 9, "add_edg": 10, "add_interfac": 11, "add_interface_to_interfac": 12, "add_interfaces_from_mesh": 13, "add_nod": 14, "add_to_interfac": 15, "adjacency_matrix": 16, "clear": 17, "complement": 18, "connected_edg": 19, "connectivity_matrix": 20, "copi": 21, "count_cross": 22, "degre": 23, "degree_in": 24, "degree_matrix": 25, "degree_out": 26, "delete_edg": 27, "delete_nod": 28, "edge_attribut": [29, 30], "edge_coordin": 31, "edge_direct": 32, "edge_length": 33, "edge_midpoint": 34, "edge_point": 35, "edge_sampl": 36, "edge_vector": 37, "edg": 38, "edges_attribut": [39, 40], "edges_wher": 41, "edges_where_pred": 42, "embed_in_plan": 43, "find_cross": 44, "find_cycl": 45, "from_data": 46, "from_edg": 47, "from_geometri": 48, "from_json": 49, "from_jsonstr": 50, "from_lin": 51, "from_networkx": 52, "from_nodes_and_edg": 53, "from_obj": 54, "from_pointcloud": 55, "get_any_edg": [56, 57], "get_any_nod": [58, 59], "get_weight_mean": 60, "get_weight_tot": 61, "gkey_kei": 62, "gkey_nod": 63, "has_edg": 64, "has_nod": 65, "index_kei": 66, "index_uv": 67, "is_block_support": 68, "is_connect": 69, "is_cross": 70, "is_leaf": 71, "is_node_connect": 72, "is_planar": 73, "is_planar_embed": 74, "is_xi": 75, "key_gkei": 76, "key_index": 77, "laplacian_matrix": 78, "leav": 79, "move_block": 80, "neighborhood": 81, "neighbor": 82, "neighbors_in": 83, "neighbors_out": 84, "network_adjacency_matrix": 85, "network_connectivity_matrix": 86, "network_degree_matrix": 87, "network_embed_in_plan": 88, "network_is_planar": 89, "network_is_planar_embed": 90, "network_laplacian_matrix": 91, "node_attribut": [92, 93], "node_coordin": 94, "node_gkei": 95, "node_laplacian": 96, "node_neighborhood_centroid": 97, "node_sampl": 98, "node": 99, "nodes_attribut": [100, 101], "nodes_wher": 102, "nodes_where_pred": 103, "number_of_edg": 104, "number_of_interface_nod": 105, "number_of_nod": 106, "rotate_assembli": 107, "set_boundary_condit": [108, 109], "sha256": 110, "shortest_path": 111, "smooth": 112, "split_edg": 113, "subset": 114, "summari": 115, "to_data": 116, "to_json": 117, "to_jsonstr": 118, "to_lin": 119, "to_networkx": 120, "to_nodes_and_edg": 121, "to_obj": 122, "to_point": 123, "transform": [124, 125], "unset_edge_attribut": 126, "unset_node_attribut": 127, "update_dea": 128, "update_default_edge_attribut": 129, "update_default_node_attribut": 130, "update_dna": 131, "uv_index": 132, "validate_data": 133, "validate_json": 134, "assembly_interfaces_numpi": 135, "cra_penalty_solv": 136, "cra_solv": 137, "make_aeq": 138, "make_afr": 139, "unit_basi": 140, "exampl": 141, "armadillo": 142, "vault": 142, "bridg": 143, "cube": 144, "shelf": 145, "snake": 146, "stack": 147, "wedg": 148, "type": 148, "b": 148, "introduct": 149, "credit": 149, "tabl": 149, "content": 149, "indic": 149, "instal": 150, "conda": 150, "licens": 151, "tutori": 152}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 56}})