Search.setIndex({"docnames": ["api", "api/compas_cra", "api/compas_cra.algorithms", "api/compas_cra.datastructures", "api/compas_cra.equilibrium", "api/compas_cra.geometry", "api/compas_cra.viewers", "api/generated/compas_cra.algorithms.assembly_interfaces_numpy", "api/generated/compas_cra.datastructures.CRA_Assembly", "api/generated/compas_cra.datastructures.CRA_Assembly.ToString", "api/generated/compas_cra.datastructures.CRA_Assembly.__init__", "api/generated/compas_cra.datastructures.CRA_Assembly.add_block", "api/generated/compas_cra.datastructures.CRA_Assembly.add_block_block_interfaces", "api/generated/compas_cra.datastructures.CRA_Assembly.add_block_from_mesh", "api/generated/compas_cra.datastructures.CRA_Assembly.add_blocks_from_rhinomeshes", "api/generated/compas_cra.datastructures.CRA_Assembly.add_interface_to_interfaces", "api/generated/compas_cra.datastructures.CRA_Assembly.add_interfaces_from_meshes", "api/generated/compas_cra.datastructures.CRA_Assembly.add_to_interfaces", "api/generated/compas_cra.datastructures.CRA_Assembly.block_node", "api/generated/compas_cra.datastructures.CRA_Assembly.blocks", "api/generated/compas_cra.datastructures.CRA_Assembly.compute_aabb", "api/generated/compas_cra.datastructures.CRA_Assembly.compute_obb", "api/generated/compas_cra.datastructures.CRA_Assembly.copy", "api/generated/compas_cra.datastructures.CRA_Assembly.delete_block", "api/generated/compas_cra.datastructures.CRA_Assembly.delete_blocks", "api/generated/compas_cra.datastructures.CRA_Assembly.edge_blocks", "api/generated/compas_cra.datastructures.CRA_Assembly.edge_interfaces", "api/generated/compas_cra.datastructures.CRA_Assembly.edge_line", "api/generated/compas_cra.datastructures.CRA_Assembly.edges", "api/generated/compas_cra.datastructures.CRA_Assembly.from_json", "api/generated/compas_cra.datastructures.CRA_Assembly.from_jsonstring", "api/generated/compas_cra.datastructures.CRA_Assembly.from_polysurfaces", "api/generated/compas_cra.datastructures.CRA_Assembly.from_rhinomeshes", "api/generated/compas_cra.datastructures.CRA_Assembly.from_template", "api/generated/compas_cra.datastructures.CRA_Assembly.get_weight_mean", "api/generated/compas_cra.datastructures.CRA_Assembly.get_weight_total", "api/generated/compas_cra.datastructures.CRA_Assembly.has_block", "api/generated/compas_cra.datastructures.CRA_Assembly.has_interface", "api/generated/compas_cra.datastructures.CRA_Assembly.interfaces", "api/generated/compas_cra.datastructures.CRA_Assembly.is_block_support", "api/generated/compas_cra.datastructures.CRA_Assembly.move_block", "api/generated/compas_cra.datastructures.CRA_Assembly.node_block", "api/generated/compas_cra.datastructures.CRA_Assembly.node_point", "api/generated/compas_cra.datastructures.CRA_Assembly.nodes", "api/generated/compas_cra.datastructures.CRA_Assembly.number_of_blocks", "api/generated/compas_cra.datastructures.CRA_Assembly.number_of_edges", "api/generated/compas_cra.datastructures.CRA_Assembly.number_of_interfaces", "api/generated/compas_cra.datastructures.CRA_Assembly.number_of_nodes", "api/generated/compas_cra.datastructures.CRA_Assembly.rotate", "api/generated/compas_cra.datastructures.CRA_Assembly.rotate_assembly", "api/generated/compas_cra.datastructures.CRA_Assembly.rotated", "api/generated/compas_cra.datastructures.CRA_Assembly.scale", "api/generated/compas_cra.datastructures.CRA_Assembly.scaled", "api/generated/compas_cra.datastructures.CRA_Assembly.set_boundary_condition", "api/generated/compas_cra.datastructures.CRA_Assembly.set_boundary_conditions", "api/generated/compas_cra.datastructures.CRA_Assembly.sha256", "api/generated/compas_cra.datastructures.CRA_Assembly.to_json", "api/generated/compas_cra.datastructures.CRA_Assembly.to_jsonstring", "api/generated/compas_cra.datastructures.CRA_Assembly.transform", "api/generated/compas_cra.datastructures.CRA_Assembly.transform_numpy", "api/generated/compas_cra.datastructures.CRA_Assembly.transformed", "api/generated/compas_cra.datastructures.CRA_Assembly.transformed_numpy", "api/generated/compas_cra.datastructures.CRA_Assembly.translate", "api/generated/compas_cra.datastructures.CRA_Assembly.translated", "api/generated/compas_cra.datastructures.CRA_Assembly.unset_boundary_conditions", "api/generated/compas_cra.datastructures.CRA_Assembly.validate_data", "api/generated/compas_cra.equilibrium.bounds", "api/generated/compas_cra.equilibrium.constraints", "api/generated/compas_cra.equilibrium.cra_penalty_solve", "api/generated/compas_cra.equilibrium.cra_solve", "api/generated/compas_cra.equilibrium.density_setup", "api/generated/compas_cra.equilibrium.equilibrium_setup", "api/generated/compas_cra.equilibrium.external_force_setup", "api/generated/compas_cra.equilibrium.free_nodes", "api/generated/compas_cra.equilibrium.friction_setup", "api/generated/compas_cra.equilibrium.initialisations", "api/generated/compas_cra.equilibrium.make_aeq", "api/generated/compas_cra.equilibrium.make_afr", "api/generated/compas_cra.equilibrium.num_free", "api/generated/compas_cra.equilibrium.num_vertices", "api/generated/compas_cra.equilibrium.objectives", "api/generated/compas_cra.equilibrium.pyomo_result_assembly", "api/generated/compas_cra.equilibrium.pyomo_result_check", "api/generated/compas_cra.equilibrium.rbe_solve", "api/generated/compas_cra.equilibrium.static_equilibrium_constraints", "api/generated/compas_cra.equilibrium.unit_basis", "api/generated/compas_cra.geometry.Arch", "api/generated/compas_cra.geometry.Arch.__init__", "api/generated/compas_cra.geometry.Arch.assembly", "api/generated/compas_cra.geometry.Arch.blocks", "api/generated/compas_cra.viewers.cra_view", "api/generated/compas_cra.viewers.cra_view_ex", "cite", "contributions", "examples", "examples/00_simple_cube", "examples/01_cubes_rbe", "examples/02_cubes", "examples/03_cubes_penalty", "examples/04_stacks", "examples/05_wedge", "examples/06_arch", "examples/07_shelf", "examples/08_snake", "examples/09_bridge", "examples/10_armadillo", "examples/11_concave-short", "examples/12_concave-long", "examples/13_curve-3-blocks", "examples/14_cube-curve-short", "examples/15_cube-curve-tall", "examples/16_ha", "index", "installation", "license", "tutorial"], "filenames": ["api.rst", "api/compas_cra.rst", "api/compas_cra.algorithms.rst", "api/compas_cra.datastructures.rst", "api/compas_cra.equilibrium.rst", "api/compas_cra.geometry.rst", "api/compas_cra.viewers.rst", "api/generated/compas_cra.algorithms.assembly_interfaces_numpy.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.ToString.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.__init__.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.add_block.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.add_block_block_interfaces.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.add_block_from_mesh.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.add_blocks_from_rhinomeshes.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.add_interface_to_interfaces.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.add_interfaces_from_meshes.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.add_to_interfaces.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.block_node.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.blocks.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.compute_aabb.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.compute_obb.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.copy.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.delete_block.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.delete_blocks.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.edge_blocks.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.edge_interfaces.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.edge_line.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.edges.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.from_json.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.from_jsonstring.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.from_polysurfaces.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.from_rhinomeshes.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.from_template.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.get_weight_mean.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.get_weight_total.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.has_block.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.has_interface.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.interfaces.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.is_block_support.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.move_block.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.node_block.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.node_point.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.nodes.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.number_of_blocks.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.number_of_edges.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.number_of_interfaces.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.number_of_nodes.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.rotate.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.rotate_assembly.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.rotated.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.scale.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.scaled.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.set_boundary_condition.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.set_boundary_conditions.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.sha256.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.to_json.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.to_jsonstring.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.transform.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.transform_numpy.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.transformed.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.transformed_numpy.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.translate.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.translated.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.unset_boundary_conditions.rst", "api/generated/compas_cra.datastructures.CRA_Assembly.validate_data.rst", "api/generated/compas_cra.equilibrium.bounds.rst", "api/generated/compas_cra.equilibrium.constraints.rst", "api/generated/compas_cra.equilibrium.cra_penalty_solve.rst", "api/generated/compas_cra.equilibrium.cra_solve.rst", "api/generated/compas_cra.equilibrium.density_setup.rst", "api/generated/compas_cra.equilibrium.equilibrium_setup.rst", "api/generated/compas_cra.equilibrium.external_force_setup.rst", "api/generated/compas_cra.equilibrium.free_nodes.rst", "api/generated/compas_cra.equilibrium.friction_setup.rst", "api/generated/compas_cra.equilibrium.initialisations.rst", "api/generated/compas_cra.equilibrium.make_aeq.rst", "api/generated/compas_cra.equilibrium.make_afr.rst", "api/generated/compas_cra.equilibrium.num_free.rst", "api/generated/compas_cra.equilibrium.num_vertices.rst", "api/generated/compas_cra.equilibrium.objectives.rst", "api/generated/compas_cra.equilibrium.pyomo_result_assembly.rst", "api/generated/compas_cra.equilibrium.pyomo_result_check.rst", "api/generated/compas_cra.equilibrium.rbe_solve.rst", "api/generated/compas_cra.equilibrium.static_equilibrium_constraints.rst", "api/generated/compas_cra.equilibrium.unit_basis.rst", "api/generated/compas_cra.geometry.Arch.rst", "api/generated/compas_cra.geometry.Arch.__init__.rst", "api/generated/compas_cra.geometry.Arch.assembly.rst", "api/generated/compas_cra.geometry.Arch.blocks.rst", "api/generated/compas_cra.viewers.cra_view.rst", "api/generated/compas_cra.viewers.cra_view_ex.rst", "cite.rst", "contributions.rst", "examples.rst", "examples/00_simple_cube.rst", "examples/01_cubes_rbe.rst", "examples/02_cubes.rst", "examples/03_cubes_penalty.rst", "examples/04_stacks.rst", "examples/05_wedge.rst", "examples/06_arch.rst", "examples/07_shelf.rst", "examples/08_snake.rst", "examples/09_bridge.rst", "examples/10_armadillo.rst", "examples/11_concave-short.rst", "examples/12_concave-long.rst", "examples/13_curve-3-blocks.rst", "examples/14_cube-curve-short.rst", "examples/15_cube-curve-tall.rst", "examples/16_ha.rst", "index.rst", "installation.rst", "license.rst", "tutorial.rst"], "titles": ["API Reference", "compas_cra", "Functions", "Classes", "Solvers", "Classes", "CRA Viewer", "assembly_interfaces_numpy", "CRA_Assembly", "CRA_Assembly.ToString", "CRA_Assembly.__init__", "CRA_Assembly.add_block", "CRA_Assembly.add_block_block_interfaces", "CRA_Assembly.add_block_from_mesh", "CRA_Assembly.add_blocks_from_rhinomeshes", "CRA_Assembly.add_interface_to_interfaces", "CRA_Assembly.add_interfaces_from_meshes", "CRA_Assembly.add_to_interfaces", "CRA_Assembly.block_node", "CRA_Assembly.blocks", "CRA_Assembly.compute_aabb", "CRA_Assembly.compute_obb", "CRA_Assembly.copy", "CRA_Assembly.delete_block", "CRA_Assembly.delete_blocks", "CRA_Assembly.edge_blocks", "CRA_Assembly.edge_interfaces", "CRA_Assembly.edge_line", "CRA_Assembly.edges", "CRA_Assembly.from_json", "CRA_Assembly.from_jsonstring", "CRA_Assembly.from_polysurfaces", "CRA_Assembly.from_rhinomeshes", "CRA_Assembly.from_template", "CRA_Assembly.get_weight_mean", "CRA_Assembly.get_weight_total", "CRA_Assembly.has_block", "CRA_Assembly.has_interface", "CRA_Assembly.interfaces", "CRA_Assembly.is_block_support", "CRA_Assembly.move_block", "CRA_Assembly.node_block", "CRA_Assembly.node_point", "CRA_Assembly.nodes", "CRA_Assembly.number_of_blocks", "CRA_Assembly.number_of_edges", "CRA_Assembly.number_of_interfaces", "CRA_Assembly.number_of_nodes", "CRA_Assembly.rotate", "CRA_Assembly.rotate_assembly", "CRA_Assembly.rotated", "CRA_Assembly.scale", "CRA_Assembly.scaled", "CRA_Assembly.set_boundary_condition", "CRA_Assembly.set_boundary_conditions", "CRA_Assembly.sha256", "CRA_Assembly.to_json", "CRA_Assembly.to_jsonstring", "CRA_Assembly.transform", "CRA_Assembly.transform_numpy", "CRA_Assembly.transformed", "CRA_Assembly.transformed_numpy", "CRA_Assembly.translate", "CRA_Assembly.translated", "CRA_Assembly.unset_boundary_conditions", "CRA_Assembly.validate_data", "bounds", "constraints", "cra_penalty_solve", "cra_solve", "density_setup", "equilibrium_setup", "external_force_setup", "free_nodes", "friction_setup", "initialisations", "make_aeq", "make_afr", "num_free", "num_vertices", "objectives", "pyomo_result_assembly", "pyomo_result_check", "rbe_solve", "static_equilibrium_constraints", "unit_basis", "Arch", "Arch.__init__", "Arch.assembly", "Arch.blocks", "cra_view", "cra_view_ex", "Citing", "How to contribute", "Examples", "Simplest Cube", "RBE Solve Cubes", "CRA Solve Cubes", "Penalty Solve Cubes", "Stacks", "Wedge", "Arch", "Shelf", "Snake", "Bridge", "Armadillo Vault", "Short Concave Interlocking Joint", "Long Concave Interlocking Joint", "Curve Interface Surface with 3 Blocks", "Short Cube with Curve interface", "Tall Cube with Curve interface", "Model HA", "Introduction", "Installation", "License", "Tutorial"], "terms": {"compas_cra": [0, 7, 8, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 90, 91, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115], "class": [1, 8, 9, 15, 86, 112], "function": [1, 11, 13, 66, 67, 68, 69, 75, 80, 83, 84, 112, 113], "solver": [1, 68, 69, 80, 83, 112, 113, 115], "equilibrium": [1, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112], "helper": [1, 112], "pyomo": [1, 66, 67, 68, 69, 75, 80, 81, 82, 83, 84, 112, 113], "cra": [1, 68, 69, 80, 90, 91, 92, 94, 105, 112, 113], "viewer": [1, 90, 91, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115], "The": [4, 11, 12, 13, 14, 22, 25, 26, 27, 29, 30, 41, 42, 48, 50, 51, 52, 56, 57, 58, 59, 60, 61, 62, 63, 65, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 83, 85, 86, 90, 91, 93, 112, 114, 115], "follow": [4, 68, 69, 83, 114, 115], "can": [4, 65, 94, 113, 115], "us": [4, 9, 55, 59, 61, 62, 63, 65, 68, 69, 72, 83, 91, 92, 93, 112, 113, 114], "you": [4, 92, 93, 112, 113], "re": 4, "develop": [4, 93, 112], "your": [4, 92, 93, 112, 113], "own": [4, 115], "formul": [4, 67, 68, 74, 76, 77, 83, 112], "algorithm": [7, 55, 68, 69, 83, 97, 98, 100, 101, 102, 103, 104, 105, 111, 115], "assembli": [7, 8, 11, 12, 13, 14, 19, 23, 24, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 49, 53, 54, 58, 60, 68, 69, 70, 71, 72, 73, 74, 76, 78, 79, 81, 83, 85, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "nmax": [7, 97, 100, 101, 111], "10": [7, 92, 96, 97, 99, 100, 101, 102, 104, 111, 112], "tmax": [7, 97, 98, 100, 101, 102, 103, 104, 105, 111], "1e": [7, 90, 91, 97, 98, 100, 101, 102, 103, 104, 106, 107, 111], "06": 7, "amin": [7, 97, 98, 100, 101, 102, 103, 104, 105, 111], "0": [7, 40, 55, 58, 60, 66, 67, 68, 69, 77, 80, 83, 90, 91, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115], "1": [7, 34, 35, 55, 58, 60, 68, 69, 80, 83, 90, 91, 95, 96, 98, 99, 100, 102, 103, 104, 106, 107, 108, 109, 110, 113], "identifi": [7, 11, 12, 13, 14, 25, 26, 27, 31, 32, 41, 42, 105], "interfac": [7, 12, 15, 16, 17, 26, 37, 46, 76, 85, 90, 91, 94, 95, 96, 105, 112], "between": [7, 12, 27, 86, 115], "block": [7, 11, 12, 13, 14, 18, 23, 24, 25, 31, 32, 36, 39, 40, 41, 44, 53, 54, 68, 69, 70, 71, 72, 73, 74, 76, 78, 79, 83, 85, 86, 90, 91, 92, 94, 95, 96, 98, 99, 105, 112, 114], "an": [7, 12, 22, 29, 30, 31, 32, 33, 56, 57, 65, 93, 112, 113, 114, 115], "paramet": [7, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 90, 91], "discret": [7, 68, 69, 83, 92, 112], "int": [7, 15, 16, 17, 23, 24, 39, 40, 44, 45, 46, 47, 53, 54, 77, 79, 86], "option": [7, 11, 13, 22, 34, 35, 40, 48, 49, 50, 51, 52, 55, 56, 57, 66, 67, 68, 69, 71, 74, 76, 77, 80, 83, 84, 85, 90, 91, 113], "maximum": 7, "number": [7, 44, 45, 46, 47, 77, 78, 79, 86], "neighbour": 7, "per": 7, "float": [7, 17, 34, 35, 48, 49, 50, 51, 52, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 83, 86, 90, 91], "deviat": 7, "from": [7, 12, 13, 14, 16, 29, 30, 31, 32, 33, 55, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114], "perfectli": 7, "flat": 7, "plane": 7, "minimum": 7, "area": [7, 17], "face": [7, 55, 90, 91, 115], "datastructur": [8, 11, 12, 13, 15, 16, 18, 19, 20, 21, 25, 26, 36, 37, 38, 41, 48, 51, 55, 61, 62, 63, 88, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 108, 109, 110, 111, 115], "base": [8, 48, 50, 86, 112], "extend": 8, "data": [8, 22, 29, 30, 55, 56, 57, 59, 61, 65], "structur": [8, 59, 61, 112], "concav": [8, 94, 112], "method": [8, 9, 86, 112], "inherit": 8, "convert": [9, 56, 57, 115], "instanc": [9, 29, 30], "string": [9, 30, 57], "thi": [9, 22, 29, 30, 50, 52, 58, 60, 61, 63, 65, 68, 69, 72, 83, 93, 100, 112, 113, 114, 115], "exist": [9, 91], "net": [9, 74, 77], "compat": 9, "when": [9, 93, 112], "ironpython": 9, "implicit": 9, "convers": 9, "usual": 9, "take": 9, "place": [9, 58, 68, 69, 83], "cpython": 9, "kick": 9, "its": [9, 56, 57, 113], "default": [9, 22, 48, 50, 51, 52, 56, 57], "print": [9, 56, 57, 68, 69, 83, 105, 115], "self": [9, 90, 91], "gettyp": 9, "fullnam": 9, "similar": 9, "overrid": 9, "object": [9, 22, 29, 30, 56, 57, 65, 84, 86, 91, 113], "fix": [9, 73], "make": [9, 22, 93], "rhino": [9, 14, 31, 32], "grasshopp": 9, "displai": 9, "proper": 9, "represent": [9, 14, 56, 57], "ar": [9, 93, 112, 115], "connect": [9, 11, 13, 114], "panel": 9, "other": [9, 114], "type": [9, 17, 22, 29, 30, 65], "output": 9, "node": [11, 13, 18, 23, 24, 27, 39, 40, 41, 42, 47, 53, 54, 70, 73, 78, 95, 98, 99, 104, 115], "none": [11, 13, 15, 16, 17, 22, 23, 24, 28, 34, 35, 39, 40, 43, 48, 49, 50, 51, 52, 53, 54, 59, 62, 64, 70, 86, 87, 90, 91], "attr_dict": [11, 13], "kwattr": [11, 13], "add": [11, 12, 13, 14, 15, 16, 17, 93, 113, 115], "compas_assembli": [11, 12, 15, 18, 19, 25, 26, 36, 37, 38, 41, 88, 95, 96, 98, 99, 115], "hashabl": [11, 12, 13, 18, 25, 26, 27, 28, 41, 42, 43], "correspond": [11, 12, 13, 18, 25, 26, 41], "graph": [11, 12, 13, 18, 25, 26, 28, 41, 43, 45, 47, 70, 102, 104, 115], "If": [11, 12, 13, 29, 30, 55, 56, 57, 72, 93], "valu": [11, 13, 68, 69, 70, 72, 74, 83, 90, 91], "i": [11, 12, 13, 29, 30, 39, 49, 58, 65, 67, 68, 69, 72, 82, 83, 85, 93, 95, 96, 99, 102, 112, 113, 114, 115], "provid": [11, 13, 114, 115], "gener": [11, 13, 28, 43, 93], "automat": [11, 13, 115], "dict": [11, 13, 70], "A": [11, 13, 14, 31, 32, 68, 69, 83, 89, 111, 114], "dictionari": [11, 13], "attribut": [11, 13, 72], "kwatr": [11, 13], "addit": [11, 13, 112], "form": [11, 13, 112, 115], "name": [11, 13, 67, 93, 113, 115], "return": [11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 88, 89, 90, 91, 105], "b": [12, 68, 71, 74, 76, 77, 83], "two": [12, 25, 115], "list": [12, 14, 16, 24, 26, 31, 32, 40, 49, 54, 73, 89], "tupl": [12, 25, 26, 27, 28, 80], "edg": [12, 15, 16, 17, 25, 26, 27, 45, 90, 91], "rais": [12, 29, 30, 82], "assemblyerror": 12, "least": 12, "one": [12, 93, 115], "part": 12, "mesh": [13, 14, 16, 32, 55, 89, 95, 96, 99], "normal": [13, 115], "compa": [13, 16, 20, 21, 22, 27, 29, 30, 42, 48, 50, 55, 62, 63, 68, 69, 83, 92, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115], "guid": [14, 31, 32, 112, 115], "multipl": 14, "str": [14, 17, 29, 30, 31, 32, 55, 56, 57, 66, 67, 75, 80], "repres": [14, 31, 32, 42, 115], "kei": [14, 23, 24, 39, 40, 53, 54, 70, 95, 96, 99], "ad": 14, "u": [15, 16, 17], "v": [15, 16, 17], "block_j": [15, 16, 17], "id": [15, 16, 17, 73, 93], "block_k": [15, 16, 17], "size": 17, "point": [17, 42, 48, 50, 86, 115], "frame": [17, 95, 96, 98, 99, 115], "vertic": [17, 77, 79], "local": [17, 93, 113, 115], "coordin": 17, "retriev": [18, 25, 26, 27, 41, 42], "iter": [19, 28, 43], "over": [19, 28, 43], "yield": [19, 38], "comput": [20, 21, 55, 92, 112], "axi": [20, 48, 49, 50, 96, 98, 99, 100, 106, 107], "align": [20, 67, 68, 69, 83], "bound": [20, 21, 68, 69], "box": [20, 21, 95, 96, 98, 99, 115], "geometri": [20, 21, 27, 42, 48, 50, 52, 62, 63, 86, 95, 96, 98, 99, 100, 101, 112], "orient": 21, "cl": [22, 97, 100, 102, 103, 104, 106, 107, 108, 109, 110, 111, 115], "independ": [22, 113], "current": [22, 115], "delet": [23, 24], "line": [27, 90, 91, 93], "segment": 27, "classmethod": [29, 30, 31, 33, 65], "filepath": [29, 56], "construct": [29, 30, 31, 32, 33, 65, 115], "json": [29, 30, 56, 57, 58, 60, 97, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "file": [29, 56, 93, 94, 114], "path": [29, 56, 97, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115], "contain": [29, 30, 36, 37], "ha": [29, 30, 94, 112], "correct": [29, 30], "schema": [29, 30, 65], "typeerror": [29, 30], "identify_interfac": [31, 32, 33, 105], "fals": [31, 32, 33, 49, 55, 56, 57, 68, 69, 71, 74, 76, 77, 81, 83, 85, 86, 87, 90, 91, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 115], "kwarg": [31, 33], "polysurfac": 31, "poli": 31, "surfac": [31, 94, 112], "exampl": [31, 32, 55, 58, 60, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 108, 109, 110, 112, 115], "compas_rhino": [31, 32, 113, 115], "select_surfac": 31, "add_blocks_from_polysurfac": 31, "select_mesh": [32, 115], "add_blocks_from_rhinomesh": [32, 115], "templat": 33, "parameter": 33, "densiti": [34, 35, 68, 69, 70, 72, 83, 90, 91, 95, 98, 102, 103, 104, 106, 107, 108, 109, 110], "get": [34, 35, 55], "mean": 34, "weight": [34, 35, 80, 90, 91, 102, 103, 104, 105], "materi": [34, 35, 68, 69, 70, 72, 83, 90, 91], "total": [35, 77, 79], "verifi": [36, 37], "given": [36, 37, 58, 60, 86], "bool": [36, 37, 49, 55, 56, 57, 68, 69, 71, 74, 76, 77, 83, 85, 90, 91], "check": [39, 68, 69, 82, 83, 93, 115], "support": [39, 95, 96, 98, 99, 115], "vector": [40, 48, 50, 62, 63, 72, 90, 91], "move": 40, "translat": [40, 48, 50, 51, 52, 95, 96, 98, 99, 115], "locat": [42, 113, 115], "angl": [48, 49, 50, 99, 106, 107], "radian": [48, 49, 50], "z": [48, 50, 51, 52, 55, 95, 96, 99], "origin": [48, 49, 50], "scale": [48, 50, 62, 63, 90, 91, 95, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "transform": [48, 50, 51, 52, 59, 61, 62, 63, 95, 96, 98, 99, 115], "o": [49, 97, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115], "is_rad": 49, "rotat": [49, 51, 52, 58, 60, 62, 63, 96, 98, 99, 100, 106, 107, 111, 115], "entir": 49, "true": [49, 55, 56, 57, 71, 74, 76, 77, 85, 90, 91, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115], "degre": [49, 96, 98, 99, 100, 106, 107, 111], "copi": [50, 52, 58, 60, 61, 63, 97, 100, 102, 103, 104, 106, 107, 108, 109, 110, 111, 114, 115], "x": [51, 52, 95, 96, 99, 100], "y": [51, 52, 95, 96, 98, 99, 100, 106, 107], "factor": [51, 52, 80], "direct": [51, 52, 115], "set": [53, 54, 70, 71, 72, 74, 93, 113, 115], "boundari": [53, 54, 64], "condit": [53, 54, 64, 114], "as_str": 55, "hash": 55, "comparison": 55, "dure": [55, 68, 69, 83, 93], "version": [55, 93, 113], "control": 55, "digest": 55, "hexadecim": 55, "format": 55, "rather": 55, "than": 55, "byte": 55, "import": [55, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115], "from_obj": 55, "obj": 55, "v1": 55, "v2": 55, "vertex_attribut": 55, "vertex_sampl": 55, "v3": 55, "pretti": [56, 57], "nativ": [56, 57], "save": [56, 57, 81, 115], "t": [58, 60, 68, 69, 83], "matrix": [58, 60, 71, 74, 76, 77, 84, 85], "note": [58, 68, 69, 80, 83, 92, 112, 115], "No": [58, 113], "made": 58, "from_json": [58, 60], "r": [58, 60, 93, 113, 115], "from_axis_and_angl": [58, 60, 115], "pi": [58, 60], "2": [58, 60, 68, 69, 80, 83, 95, 96, 97, 99, 100, 101, 103, 106, 107, 111, 113], "assembly_transform": [58, 60], "unset": 64, "all": [64, 76, 93, 94, 113, 114], "valid": 65, "against": 65, "": [65, 68, 69, 83, 112, 115], "raw": 65, "__from_data__": 65, "ani": [65, 93, 114], "variabl": [66, 75], "d_bnd": [66, 68, 69, 100, 102, 103, 104, 106, 107], "001": [66, 68, 69], "d": [66, 67, 68, 69, 100, 102, 103, 104], "virtual": [66, 67, 68, 69, 90, 91, 93, 113], "displac": [66, 68, 69, 90, 91, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "delta": [66, 67, 68, 69], "f": [66, 68, 69, 75, 83, 113], "forc": [66, 72, 75, 84, 90, 91, 112], "f_n": [66, 75, 80], "f_u": [66, 75, 80], "f_v": [66, 75, 80], "f_tild": [66, 75], "callabl": [66, 67, 75, 80, 84], "constraint": [66, 84], "domain": 66, "ep": [67, 68, 69, 102, 103, 104, 106, 107], "0001": [67, 68, 69, 105], "contact": [67, 68, 69], "f_": [67, 68, 69, 83], "jkn": [67, 68, 69, 83], "d_": [67, 68, 69], "penalty_contact": 67, "penalti": [67, 68, 71, 74, 76, 77, 80, 81, 83, 85, 94, 101, 112, 115], "fn_np": 67, "fn": 67, "cannot": [67, 113], "coexist": 67, "no_penetr": 67, "penetr": 67, "ft_dt": 67, "friction": [67, 68, 69, 74, 77, 80, 83, 84, 100, 111], "slide": 67, "jkt": [67, 68, 69], "alpha_": [67, 68, 69], "jk": [67, 68, 69], "_": [67, 68, 69, 83], "penalty_ft_dt": 67, "epsilon": [67, 68, 69], "overlap": [67, 68, 69, 102, 103, 104], "mu": [68, 69, 74, 77, 83, 96, 100, 101, 102, 103, 104, 106, 107, 111], "84": [68, 69, 83, 100, 106, 107, 111], "verbos": [68, 69, 81, 83, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 115], "timer": [68, 69, 83, 95, 96, 97, 98, 99, 100, 101, 106, 107, 108, 109, 110, 111, 115], "ipopt": [68, 69, 83, 113], "rigid": [68, 69, 70, 71, 72, 73, 74, 76, 78, 79, 83, 85, 90, 91, 92, 112], "coeffici": [68, 69, 74, 77, 83, 100, 111], "inform": [68, 69, 83, 113], "execut": [68, 69, 83, 113], "time": [68, 69, 83, 113, 115], "solv": [68, 69, 83, 94, 101, 112], "updat": [68, 69, 83], "also": [68, 69, 83, 113, 115], "rpc": [68, 69, 83], "cloud": [68, 69, 83], "optimis": [68, 69, 72, 81, 82, 83], "problem": [68, 69, 82, 83, 112], "eq": [68, 69, 83], "14": [68, 104], "begin": [68, 69, 83], "split": [68, 69, 83], "min_": [68, 69, 83], "bf": [68, 69, 83], "tild": [68, 83], "q": [68, 69], "pmb": [68, 69], "alpha": [68, 69, 80], "quad": [68, 69, 83], "left": [68, 69], "_n": [68, 69], "right": [68, 69, 114], "_2": [68, 69, 80], "gamma": 68, "textrm": [68, 69, 83], "p": [68, 69, 72, 83, 84, 113], "fr": [68, 69, 83], "le": [68, 69, 83], "interc": [68, 69, 83], "varepsilon": [68, 69], "lvert": [68, 69], "cdot": [68, 69], "eta": [68, 69], "ge": [68, 69, 83], "foral": [68, 69, 83], "j": [68, 69, 83, 92, 112], "k": [68, 69, 83], "end": [68, 69, 83], "For": [68, 69, 83, 93, 113, 115], "more": [68, 69, 83, 112, 113, 115], "pleas": [68, 69, 83, 92, 93, 112, 113, 115], "our": [68, 69, 83, 92, 112, 115], "research": [68, 69, 83, 92, 112, 114], "paper": [68, 69, 83, 112, 115], "coupl": [68, 69, 83, 92, 112], "analysi": [68, 69, 83, 92, 112], "stabil": [68, 69, 83, 92, 112], "awar": [68, 69, 83, 92, 112], "design": [68, 69, 83, 92, 112], "complex": [68, 69, 83, 92, 112], "element": [68, 69, 83, 92, 112], "11": [69, 102, 104, 113], "up": [70, 71, 72, 74, 93, 113], "should": [70, 113], "match": 70, "csr_matrix": [71, 74, 76, 77, 84], "aeq": [71, 76, 84], "extern": [72, 84, 91], "ndarrai": [72, 84, 85], "free": [73, 78, 112, 114, 115], "free_block": 73, "friction_net": [74, 77], "plu": [74, 77], "afr": [74, 77, 84], "flip": 76, "creat": [76, 77, 84, 85, 86, 88, 89, 90, 93, 113], "total_vcount": 77, "fcon_numb": 77, "8": [77, 104, 113], "n": [77, 86, 113], "side": 77, "linearis": 77, "cone": 77, "basi": [77, 85], "nx3": [77, 85], "num_free_block": 78, "v_count": 79, "1000000": 80, "w_": 80, "compress": 80, "cra_penalti": 80, "tension": 80, "rbe": [80, 83, 94, 112, 115], "dsodijsio": 80, "jdoi": 80, "joi": 80, "model": [81, 84, 94, 112], "result": [81, 82, 90, 91, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115], "error": [82, 113], "infeas": [82, 112], "6": [83, 98, 102, 104], "frac": 83, "h": [83, 111], "equat": 84, "refer": [85, 93, 112, 113], "system": [85, 93], "unit": 85, "height": [86, 87, 101], "span": [86, 87, 101], "thick": [86, 87, 101], "depth": [86, 87, 101], "num_block": [86, 87, 101], "extra_support": [86, 87, 101], "voussoir": 86, "semi": 86, "circular": 86, "distanc": 86, "highest": 86, "intrado": 86, "opposit": 86, "extrado": 86, "defin": 89, "simpl": [89, 95, 96, 97, 98, 99, 102, 103, 104], "dispscal": [90, 91, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "tol": [90, 91], "05": [90, 91, 105], "grid": [90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115], "nodal": [90, 91, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115], "forcesdirect": [90, 91, 101, 104, 105], "forceslin": [90, 91, 95, 101, 104, 105], "new": [90, 113, 115], "toler": [90, 91], "consid": [90, 91], "planar": [90, 91, 115], "show": [90, 93, 101, 105, 112], "view": [90, 91], "plot": [90, 91], "compas_view2": [91, 113], "app": 91, "work": [92, 93, 112, 113], "articl": [92, 112], "kao2022coupl": [92, 112], "titl": [92, 112], "author": [92, 93, 112, 114], "kao": [92, 112, 114], "gene": [92, 112, 114], "ting": [92, 112, 114], "chun": [92, 112, 114], "iannuzzo": [92, 112], "antonino": [92, 112], "thomaszewski": [92, 112], "bernhard": [92, 112], "coro": [92, 112], "stelian": [92, 112], "van": [92, 112], "mele": [92, 112], "tom": [92, 112], "philipp": [92, 112], "journal": [92, 112], "aid": [92, 112], "volum": [92, 112], "146": [92, 112], "page": [92, 112, 113], "103216": [92, 112], "year": [92, 112], "2022": [92, 112, 114], "publish": [92, 112, 114], "elsevi": [92, 112], "doi": [92, 112], "1016": [92, 112], "cad": [92, 112, 113], "url": [92, 112], "http": [92, 112, 113], "org": [92, 112, 113], "misc": [92, 112], "framework": [92, 112], "github": [92, 93, 112, 113], "com": [92, 112, 113], "blockresearchgroup": [92, 112, 113], "_cra": [92, 112], "2020": [92, 112, 114], "5281": [92, 112], "zenodo": [92, 112], "7043135": [92, 112], "welcom": 93, "veri": 93, "much": 93, "appreci": 93, "we": [93, 113, 115], "accept": 93, "through": 93, "pull": 93, "In": [93, 112, 113], "short": [93, 94, 112], "fork": 93, "repositori": 93, "clone": [93, 113], "environ": [93, 113], "tool": [93, 113], "choic": [93, 113], "e": [93, 113], "g": [93, 113], "virtualenv": [93, 113], "conda": 93, "etc": [93, 113], "instal": [93, 112], "depend": [93, 113], "pip": 93, "requir": [93, 113], "dev": [93, 113], "txt": [93, 113], "sure": [93, 113, 115], "test": [93, 113], "pass": [93, 113], "invok": [93, 113], "start": [93, 113], "chang": [93, 113, 115], "main": 93, "branch": 93, "off": 93, "still": 93, "yourself": 93, "contributor": 93, "section": 93, "md": 93, "commit": 93, "push": 93, "websit": 93, "pyinvok": 93, "task": 93, "command": 93, "eas": 93, "recur": 93, "oper": 93, "clean": 93, "artifact": 93, "run": [93, 113, 115], "variou": 93, "document": [93, 113, 114], "style": 93, "doc": [93, 94, 113], "swift": 93, "avail": 93, "highli": 93, "recommend": 93, "have": [93, 115], "black": 93, "favourit": 93, "editor": 93, "integr": 93, "includ": [93, 114], "detail": [93, 113], "about": [93, 112], "setup": [93, 113], "might": [93, 113], "help": 93, "troubleshoot": 93, "step": [93, 115], "reproduc": [93, 115], "best": 93, "wai": 93, "send": 93, "issu": [93, 112], "propos": [93, 112], "explain": 93, "would": 93, "keep": 93, "scope": 93, "narrow": 93, "possibl": 93, "easier": 93, "implement": [93, 112, 115], "found": [94, 113], "simplest": [94, 112], "cube": [94, 99, 102, 103, 104, 112], "stack": [94, 97, 102, 103, 104, 112], "wedg": [94, 112], "arch": [94, 112], "shelf": [94, 112], "snake": [94, 112], "bridg": [94, 112], "armadillo": [94, 112], "vault": [94, 112], "interlock": [94, 112], "joint": [94, 112], "long": [94, 112], "curv": [94, 112, 115], "3": [94, 95, 96, 99, 100, 102, 103, 104, 106, 107, 112, 113], "tall": [94, 112], "calcul": [95, 96, 97, 98, 99, 102, 103, 104, 106, 107, 108, 109, 110], "cra_assembli": [95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 108, 109, 110, 111, 115], "cra_solv": [95, 97, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 115], "cra_view": [95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115], "free1": [95, 96, 98, 99, 115], "worldxi": [95, 96, 98, 99, 115], "from_vector": [95, 96, 98, 99, 115], "analys": [95, 96, 98, 115], "add_block": [95, 96, 98, 99, 115], "from_shap": [95, 96, 98, 99, 115], "set_boundary_condit": [95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 108, 109, 110, 111, 115], "interface1": [95, 96, 99], "corner": [95, 96, 99], "5": [95, 96, 97, 99, 100, 101, 104, 106, 107, 113], "c": [95, 96, 99, 100, 113, 114, 115], "enumer": [95, 96, 99], "add_vertex": [95, 96, 99], "add_fac": [95, 96, 99], "add_interfaces_from_mesh": [95, 96, 99, 115], "rbe_solv": [96, 111, 115], "deg": [96, 98, 99, 100, 106, 107, 111], "48": 96, "00": 96, "rotate_axi": [96, 98, 99, 100, 106, 107], "around": [96, 98, 99, 100, 106, 107], "rotate_assembli": [96, 98, 99, 100, 106, 107], "three": [97, 99, 102, 103, 104, 108, 112, 115], "assembly_interfaces_numpi": [97, 98, 100, 101, 102, 103, 104, 105, 111, 115], "file_i": [97, 100, 102, 103, 104, 106, 107, 108, 109, 110, 115], "join": [97, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115], "sampl": [97, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "json_load": [97, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115], "cra_penalty_solv": [98, 101, 102, 103, 104, 115], "40": [98, 106, 110], "75": [98, 113], "4": [98, 102, 103, 104, 113], "20": [99, 101], "free2": 99, "interface2": 99, "90": 100, "respect": 100, "simul": 100, "math": 100, "mt": 100, "xy30": 100, "sqrt": 100, "parametr": 101, "7": [101, 103, 104, 113], "9": [102, 104], "dispbnd": [102, 103, 104], "rang": 102, "delete_nod": [102, 103], "12": [102, 104], "density_setup": 104, "51": 104, "13": [104, 113], "15": 104, "els": [104, 105, 111], "delete_block": 104, "load": [105, 115], "visualis": [105, 113], "precalcul": 105, "load_from_result": 105, "def": 105, "load_result": 105, "armadillo_assembli": 105, "armadillo_cra": 105, "300": 105, "50": [107, 109, 113], "is_a": 111, "measur": 112, "stabl": [112, 113], "unstabl": 112, "howev": [112, 113], "pure": 112, "incorrectli": 112, "describ": 112, "involv": 112, "To": [112, 115], "overcom": 112, "introduc": 112, "robust": 112, "approach": 112, "build": 112, "upon": 112, "strength": 112, "combin": 112, "kinemat": 112, "nonlinear": 112, "program": 112, "extens": 112, "benchmark": 112, "campaign": 112, "how": [112, 113], "enabl": 112, "accur": 112, "dimension": 112, "interact": 112, "process": 112, "user": 112, "toward": 112, "sound": 112, "final": 112, "potenti": 112, "real": 112, "world": 112, "demonstr": 112, "scaffold": 112, "physic": 112, "find": [112, 113], "out": [112, 114], "et": 112, "al": 112, "cite": 112, "tutori": [112, 113], "api": 112, "licens": 112, "contribut": 112, "index": 112, "python": [113, 115], "activ": 113, "forg": 113, "wa": 113, "success": 113, "m": 113, "yai": 113, "correctli": 113, "try": 113, "script": [113, 115], "tutorial_cub": [113, 115], "py": [113, 115], "manual": [113, 115], "go": 113, "directori": [113, 115], "git": 113, "cd": 113, "edit": 113, "channel": 113, "config": 113, "env": 113, "env_osx": 113, "mac": 113, "env_win": 113, "env_linux": 113, "linux": 113, "prune": 113, "after": [113, 115], "see": [113, 115], "someth": 113, "like": 113, "session": 113, "platform": 113, "darwin": 113, "pytest": 113, "pluggi": 113, "rootdir": 113, "configfil": 113, "cfg": 113, "testpath": 113, "collect": 113, "item": 113, "test_cra": 113, "25": 113, "test_cra_penalti": 113, "test_ipopt": 113, "test_rb": 113, "100": 113, "warn": 113, "summari": 113, "en": 113, "captur": 113, "html": 113, "41": 113, "softwar": [113, 114], "geometr": 113, "order": 113, "do": [113, 114, 115], "uninstal": 113, "everi": [113, 115], "open": [113, 115], "restart": [113, 115], "reset": [113, 115], "engin": [113, 115], "befor": [113, 115], "common": 113, "applicationerror": 113, "thread": 113, "solut": 113, "group": [113, 114, 115], "googl": 113, "dsopf": 113, "wypbzp": 113, "hlcw": 113, "pli": 113, "so": [113, 114, 115], "pc": 113, "amd": 113, "processor": 113, "mit": 114, "copyright": 114, "eth": 114, "zurich": 114, "permiss": 114, "herebi": 114, "grant": 114, "charg": 114, "person": 114, "obtain": 114, "associ": 114, "deal": 114, "without": [114, 115], "restrict": 114, "limit": 114, "modifi": 114, "merg": 114, "distribut": 114, "sublicens": 114, "sell": 114, "permit": 114, "whom": 114, "furnish": 114, "subject": 114, "abov": 114, "notic": 114, "shall": 114, "substanti": 114, "portion": 114, "THE": 114, "AS": 114, "warranti": 114, "OF": 114, "kind": 114, "express": 114, "OR": 114, "impli": 114, "BUT": 114, "NOT": 114, "TO": 114, "merchant": 114, "fit": 114, "FOR": 114, "particular": 114, "purpos": 114, "AND": 114, "noninfring": 114, "IN": 114, "NO": 114, "event": 114, "holder": 114, "BE": 114, "liabl": 114, "claim": 114, "damag": 114, "liabil": 114, "whether": 114, "action": 114, "contract": 114, "tort": 114, "otherwis": 114, "aris": 114, "WITH": 114, "anoth": 115, "them": 115, "Then": 115, "complet": 115, "download": 115, "input": 115, "here": 115, "mesh_to_assembly_json": 115, "select": 115, "rhinoscriptsyntax": 115, "abspath": 115, "dirnam": 115, "__file__": 115, "filenam": 115, "getstr": 115, "xxx": 115, "file_o": 115, "json_dump": 115, "sequenc": 115, "becaus": 115, "indic": 115, "previou": 115, "detect": 115, "thei": 115, "discretis": 115, "triangl": 115, "mesh_to_assembly_interfaces_json": 115, "store": 115, "rhinomesh": 115, "getobject": 115, "preselect": 115, "filter": 115, "node_label": 115, "node_attribut": 115, "centroid": 115, "append": 115, "addtextdot": 115, "is_finish": 115, "while": 115, "interface_guid": 115, "from_guid": 115, "to_compa": 115, "edge_a": 115, "getinteg": 115, "assign": 115, "edge_b": 115, "getboolean": 115, "continu": 115, "stop": 115, "deleteobject": 115, "must": 115, "precomput": 115, "folder": 115}, "objects": {"": [[1, 0, 0, "-", "compas_cra"]], "compas_cra": [[2, 0, 0, "-", "algorithms"], [3, 0, 0, "-", "datastructures"], [4, 0, 0, "-", "equilibrium"], [5, 0, 0, "-", "geometry"], [6, 0, 0, "-", "viewers"]], "compas_cra.algorithms": [[7, 1, 1, "", "assembly_interfaces_numpy"]], "compas_cra.datastructures": [[8, 2, 1, "", "CRA_Assembly"]], "compas_cra.datastructures.CRA_Assembly": [[9, 3, 1, "", "ToString"], [10, 3, 1, "", "__init__"], [11, 3, 1, "", "add_block"], [12, 3, 1, "", "add_block_block_interfaces"], [13, 3, 1, "", "add_block_from_mesh"], [14, 3, 1, "", "add_blocks_from_rhinomeshes"], [15, 3, 1, "", "add_interface_to_interfaces"], [16, 3, 1, "", "add_interfaces_from_meshes"], [17, 3, 1, "", "add_to_interfaces"], [18, 3, 1, "", "block_node"], [19, 3, 1, "", "blocks"], [20, 3, 1, "", "compute_aabb"], [21, 3, 1, "", "compute_obb"], [22, 3, 1, "", "copy"], [23, 3, 1, "", "delete_block"], [24, 3, 1, "", "delete_blocks"], [25, 3, 1, "", "edge_blocks"], [26, 3, 1, "", "edge_interfaces"], [27, 3, 1, "", "edge_line"], [28, 3, 1, "", "edges"], [29, 3, 1, "", "from_json"], [30, 3, 1, "", "from_jsonstring"], [31, 3, 1, "", "from_polysurfaces"], [32, 3, 1, "", "from_rhinomeshes"], [33, 3, 1, "", "from_template"], [34, 3, 1, "", "get_weight_mean"], [35, 3, 1, "", "get_weight_total"], [36, 3, 1, "", "has_block"], [37, 3, 1, "", "has_interface"], [38, 3, 1, "", "interfaces"], [39, 3, 1, "", "is_block_support"], [40, 3, 1, "", "move_block"], [41, 3, 1, "", "node_block"], [42, 3, 1, "", "node_point"], [43, 3, 1, "", "nodes"], [44, 3, 1, "", "number_of_blocks"], [45, 3, 1, "", "number_of_edges"], [46, 3, 1, "", "number_of_interfaces"], [47, 3, 1, "", "number_of_nodes"], [48, 3, 1, "", "rotate"], [49, 3, 1, "", "rotate_assembly"], [50, 3, 1, "", "rotated"], [51, 3, 1, "", "scale"], [52, 3, 1, "", "scaled"], [53, 3, 1, "", "set_boundary_condition"], [54, 3, 1, "", "set_boundary_conditions"], [55, 3, 1, "", "sha256"], [56, 3, 1, "", "to_json"], [57, 3, 1, "", "to_jsonstring"], [58, 3, 1, "", "transform"], [59, 3, 1, "", "transform_numpy"], [60, 3, 1, "", "transformed"], [61, 3, 1, "", "transformed_numpy"], [62, 3, 1, "", "translate"], [63, 3, 1, "", "translated"], [64, 3, 1, "", "unset_boundary_conditions"], [65, 3, 1, "", "validate_data"]], "compas_cra.equilibrium": [[66, 1, 1, "", "bounds"], [67, 1, 1, "", "constraints"], [68, 1, 1, "", "cra_penalty_solve"], [69, 1, 1, "", "cra_solve"], [70, 1, 1, "", "density_setup"], [71, 1, 1, "", "equilibrium_setup"], [72, 1, 1, "", "external_force_setup"], [73, 1, 1, "", "free_nodes"], [74, 1, 1, "", "friction_setup"], [75, 1, 1, "", "initialisations"], [76, 1, 1, "", "make_aeq"], [77, 1, 1, "", "make_afr"], [78, 1, 1, "", "num_free"], [79, 1, 1, "", "num_vertices"], [80, 1, 1, "", "objectives"], [81, 1, 1, "", "pyomo_result_assembly"], [82, 1, 1, "", "pyomo_result_check"], [83, 1, 1, "", "rbe_solve"], [84, 1, 1, "", "static_equilibrium_constraints"], [85, 1, 1, "", "unit_basis"]], "compas_cra.geometry": [[86, 2, 1, "", "Arch"]], "compas_cra.geometry.Arch": [[87, 3, 1, "", "__init__"], [88, 3, 1, "", "assembly"], [89, 3, 1, "", "blocks"]], "compas_cra.viewers": [[90, 1, 1, "", "cra_view"], [91, 1, 1, "", "cra_view_ex"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"]}, "titleterms": {"api": 0, "refer": 0, "compas_cra": 1, "function": [2, 4], "class": [3, 5], "solver": 4, "equilibrium": [4, 115], "helper": 4, "pyomo": 4, "cra": [6, 97, 115], "viewer": 6, "assembly_interfaces_numpi": 7, "cra_assembli": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "tostr": 9, "__init__": [10, 87], "add_block": 11, "add_block_block_interfac": 12, "add_block_from_mesh": 13, "add_blocks_from_rhinomesh": 14, "add_interface_to_interfac": 15, "add_interfaces_from_mesh": 16, "add_to_interfac": 17, "block_nod": 18, "block": [19, 89, 108, 115], "compute_aabb": 20, "compute_obb": 21, "copi": 22, "delete_block": [23, 24], "edge_block": 25, "edge_interfac": 26, "edge_lin": 27, "edg": 28, "from_json": 29, "from_jsonstr": 30, "from_polysurfac": 31, "from_rhinomesh": 32, "from_templ": 33, "get_weight_mean": 34, "get_weight_tot": 35, "has_block": 36, "has_interfac": 37, "interfac": [38, 108, 109, 110, 115], "is_block_support": 39, "move_block": 40, "node_block": 41, "node_point": 42, "node": 43, "number_of_block": 44, "number_of_edg": 45, "number_of_interfac": 46, "number_of_nod": 47, "rotat": [48, 50], "rotate_assembli": 49, "scale": [51, 52], "set_boundary_condit": [53, 54], "sha256": 55, "to_json": 56, "to_jsonstr": 57, "transform": [58, 60], "transform_numpi": 59, "transformed_numpi": 61, "translat": [62, 63], "unset_boundary_condit": 64, "validate_data": 65, "bound": 66, "constraint": 67, "cra_penalty_solv": 68, "cra_solv": 69, "density_setup": 70, "equilibrium_setup": 71, "external_force_setup": 72, "free_nod": 73, "friction_setup": 74, "initialis": 75, "make_aeq": 76, "make_afr": 77, "num_fre": 78, "num_vertic": 79, "object": 80, "pyomo_result_assembli": 81, "pyomo_result_check": 82, "rbe_solv": 83, "static_equilibrium_constraint": 84, "unit_basi": 85, "arch": [86, 87, 88, 89, 101], "assembli": [88, 115], "cra_view": 90, "cra_view_ex": 91, "cite": 92, "paper": 92, "softwar": [92, 115], "implement": 92, "how": [93, 115], "contribut": 93, "code": 93, "bug": 93, "report": 93, "featur": 93, "request": 93, "feedback": 93, "exampl": 94, "simplest": 95, "cube": [95, 96, 97, 98, 109, 110], "rbe": 96, "solv": [96, 97, 98, 115], "penalti": 98, "stack": 99, "wedg": 100, "type": 100, "b": 100, "shelf": 102, "snake": 103, "bridg": 104, "armadillo": 105, "vault": 105, "short": [106, 109], "concav": [106, 107], "interlock": [106, 107], "joint": [106, 107], "long": 107, "curv": [108, 109, 110], "surfac": 108, "3": [108, 115], "tall": 110, "model": 111, "ha": 111, "figur": [111, 115], "1": [111, 115], "introduct": 112, "credit": 112, "tabl": 112, "content": 112, "indic": 112, "instal": 113, "conda": 113, "pip": 113, "recommend": 113, "develop": 113, "guid": 113, "from": [113, 115], "sourc": 113, "A": 113, "quicker": 113, "wai": 113, "yml": 113, "file": [113, 115], "updat": 113, "packag": 113, "verifi": 113, "rhino": [113, 115], "known": 113, "issu": 113, "window": 113, "licens": 114, "tutori": 115, "us": 115, "your": 115, "analysi": 115, "creat": 115, "geometri": 115, "2": 115, "data": 115, "structur": 115, "boundari": 115, "condit": 115, "4": 115, "identifi": 115, "5": 115, "6": 115, "visualis": 115, "option": 115, "export": 115, "cad": 115, "mesh": 115, "json": 115}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"API Reference": [[0, "api-reference"]], "compas_cra": [[1, "compas-cra"]], "Functions": [[2, "functions"]], "Classes": [[3, "classes"], [5, "classes"]], "Solvers": [[4, "solvers"]], "Equilibrium Helper Functions": [[4, "equilibrium-helper-functions"]], "Pyomo Helper Functions": [[4, "pyomo-helper-functions"]], "CRA Viewer": [[6, "cra-viewer"]], "assembly_interfaces_numpy": [[7, "assembly-interfaces-numpy"]], "CRA_Assembly": [[8, "cra-assembly"]], "CRA_Assembly.ToString": [[9, "cra-assembly-tostring"]], "CRA_Assembly.__init__": [[10, "cra-assembly-init"]], "CRA_Assembly.add_block": [[11, "cra-assembly-add-block"]], "CRA_Assembly.add_block_block_interfaces": [[12, "cra-assembly-add-block-block-interfaces"]], "CRA_Assembly.add_block_from_mesh": [[13, "cra-assembly-add-block-from-mesh"]], "CRA_Assembly.add_blocks_from_rhinomeshes": [[14, "cra-assembly-add-blocks-from-rhinomeshes"]], "CRA_Assembly.add_interface_to_interfaces": [[15, "cra-assembly-add-interface-to-interfaces"]], "CRA_Assembly.add_interfaces_from_meshes": [[16, "cra-assembly-add-interfaces-from-meshes"]], "CRA_Assembly.add_to_interfaces": [[17, "cra-assembly-add-to-interfaces"]], "CRA_Assembly.block_node": [[18, "cra-assembly-block-node"]], "CRA_Assembly.blocks": [[19, "cra-assembly-blocks"]], "CRA_Assembly.compute_aabb": [[20, "cra-assembly-compute-aabb"]], "CRA_Assembly.compute_obb": [[21, "cra-assembly-compute-obb"]], "CRA_Assembly.copy": [[22, "cra-assembly-copy"]], "CRA_Assembly.delete_block": [[23, "cra-assembly-delete-block"]], "CRA_Assembly.delete_blocks": [[24, "cra-assembly-delete-blocks"]], "CRA_Assembly.edge_blocks": [[25, "cra-assembly-edge-blocks"]], "CRA_Assembly.edge_interfaces": [[26, "cra-assembly-edge-interfaces"]], "CRA_Assembly.edge_line": [[27, "cra-assembly-edge-line"]], "CRA_Assembly.edges": [[28, "cra-assembly-edges"]], "CRA_Assembly.from_json": [[29, "cra-assembly-from-json"]], "CRA_Assembly.from_jsonstring": [[30, "cra-assembly-from-jsonstring"]], "CRA_Assembly.from_polysurfaces": [[31, "cra-assembly-from-polysurfaces"]], "CRA_Assembly.from_rhinomeshes": [[32, "cra-assembly-from-rhinomeshes"]], "CRA_Assembly.from_template": [[33, "cra-assembly-from-template"]], "CRA_Assembly.get_weight_mean": [[34, "cra-assembly-get-weight-mean"]], "CRA_Assembly.get_weight_total": [[35, "cra-assembly-get-weight-total"]], "CRA_Assembly.has_block": [[36, "cra-assembly-has-block"]], "CRA_Assembly.has_interface": [[37, "cra-assembly-has-interface"]], "CRA_Assembly.interfaces": [[38, "cra-assembly-interfaces"]], "CRA_Assembly.is_block_support": [[39, "cra-assembly-is-block-support"]], "CRA_Assembly.move_block": [[40, "cra-assembly-move-block"]], "CRA_Assembly.node_block": [[41, "cra-assembly-node-block"]], "CRA_Assembly.node_point": [[42, "cra-assembly-node-point"]], "CRA_Assembly.nodes": [[43, "cra-assembly-nodes"]], "CRA_Assembly.number_of_blocks": [[44, "cra-assembly-number-of-blocks"]], "CRA_Assembly.number_of_edges": [[45, "cra-assembly-number-of-edges"]], "CRA_Assembly.number_of_interfaces": [[46, "cra-assembly-number-of-interfaces"]], "CRA_Assembly.number_of_nodes": [[47, "cra-assembly-number-of-nodes"]], "CRA_Assembly.rotate": [[48, "cra-assembly-rotate"]], "CRA_Assembly.rotate_assembly": [[49, "cra-assembly-rotate-assembly"]], "CRA_Assembly.rotated": [[50, "cra-assembly-rotated"]], "CRA_Assembly.scale": [[51, "cra-assembly-scale"]], "CRA_Assembly.scaled": [[52, "cra-assembly-scaled"]], "CRA_Assembly.set_boundary_condition": [[53, "cra-assembly-set-boundary-condition"]], "CRA_Assembly.set_boundary_conditions": [[54, "cra-assembly-set-boundary-conditions"]], "CRA_Assembly.sha256": [[55, "cra-assembly-sha256"]], "CRA_Assembly.to_json": [[56, "cra-assembly-to-json"]], "CRA_Assembly.to_jsonstring": [[57, "cra-assembly-to-jsonstring"]], "CRA_Assembly.transform": [[58, "cra-assembly-transform"]], "CRA_Assembly.transform_numpy": [[59, "cra-assembly-transform-numpy"]], "CRA_Assembly.transformed": [[60, "cra-assembly-transformed"]], "CRA_Assembly.transformed_numpy": [[61, "cra-assembly-transformed-numpy"]], "CRA_Assembly.translate": [[62, "cra-assembly-translate"]], "CRA_Assembly.translated": [[63, "cra-assembly-translated"]], "CRA_Assembly.unset_boundary_conditions": [[64, "cra-assembly-unset-boundary-conditions"]], "CRA_Assembly.validate_data": [[65, "cra-assembly-validate-data"]], "bounds": [[66, "bounds"]], "constraints": [[67, "constraints"]], "cra_penalty_solve": [[68, "cra-penalty-solve"]], "cra_solve": [[69, "cra-solve"]], "density_setup": [[70, "density-setup"]], "equilibrium_setup": [[71, "equilibrium-setup"]], "external_force_setup": [[72, "external-force-setup"]], "free_nodes": [[73, "free-nodes"]], "friction_setup": [[74, "friction-setup"]], "initialisations": [[75, "initialisations"]], "make_aeq": [[76, "make-aeq"]], "make_afr": [[77, "make-afr"]], "num_free": [[78, "num-free"]], "num_vertices": [[79, "num-vertices"]], "objectives": [[80, "objectives"]], "pyomo_result_assembly": [[81, "pyomo-result-assembly"]], "pyomo_result_check": [[82, "pyomo-result-check"]], "rbe_solve": [[83, "rbe-solve"]], "static_equilibrium_constraints": [[84, "static-equilibrium-constraints"]], "unit_basis": [[85, "unit-basis"]], "Arch": [[86, "arch"], [101, "arch"]], "Arch.__init__": [[87, "arch-init"]], "Arch.assembly": [[88, "arch-assembly"]], "Arch.blocks": [[89, "arch-blocks"]], "cra_view": [[90, "cra-view"]], "cra_view_ex": [[91, "cra-view-ex"]], "Citing": [[92, "citing"]], "Paper": [[92, "paper"]], "Software implementation": [[92, "software-implementation"]], "How to contribute": [[93, "how-to-contribute"]], "Code contributions": [[93, "code-contributions"]], "Bug reports": [[93, "bug-reports"]], "Feature requests and feedback": [[93, "feature-requests-and-feedback"]], "Examples": [[94, "examples"]], "Simplest Cube": [[95, "simplest-cube"]], "RBE Solve Cubes": [[96, "rbe-solve-cubes"]], "CRA Solve Cubes": [[97, "cra-solve-cubes"]], "Penalty Solve Cubes": [[98, "penalty-solve-cubes"]], "Stacks": [[99, "stacks"]], "Wedge": [[100, "wedge"]], "Type-b": [[100, "type-b"]], "Shelf": [[102, "shelf"]], "Snake": [[103, "snake"]], "Bridge": [[104, "bridge"]], "Armadillo Vault": [[105, "armadillo-vault"]], "Short Concave Interlocking Joint": [[106, "short-concave-interlocking-joint"]], "Long Concave Interlocking Joint": [[107, "long-concave-interlocking-joint"]], "Curve Interface Surface with 3 Blocks": [[108, "curve-interface-surface-with-3-blocks"]], "Short Cube with Curve interface": [[109, "short-cube-with-curve-interface"]], "Tall Cube with Curve interface": [[110, "tall-cube-with-curve-interface"]], "Model HA": [[111, "model-ha"]], "Figure 1": [[111, "id1"], [115, "id2"]], "Introduction": [[112, "introduction"]], "Credits": [[112, "credits"]], "Table of Contents": [[112, "table-of-contents"]], "Indices": [[112, "indices"]], "Installation": [[113, "installation"]], "Install with conda and pip (recommended)": [[113, "install-with-conda-and-pip-recommended"]], "Developer Guide": [[113, "developer-guide"]], "Install from source": [[113, "install-from-source"]], "A quicker way - from .yml file": [[113, "a-quicker-way-from-yml-file"]], "Update conda packages": [[113, "update-conda-packages"]], "Verify installation": [[113, "verify-installation"]], "Rhino Installation": [[113, "rhino-installation"]], "Known issues (Windows)": [[113, "known-issues-windows"]], "License": [[114, "license"]], "Tutorial": [[115, "tutorial"]], "How to use CRA for your analysis": [[115, "how-to-use-cra-for-your-analysis"]], "1. Creating geometries": [[115, "creating-geometries"]], "2. CRA Assembly data structure": [[115, "cra-assembly-data-structure"]], "3. Boundary conditions": [[115, "boundary-conditions"]], "4. Identifying interfaces": [[115, "identifying-interfaces"]], "5. Solving equilibrium": [[115, "solving-equilibrium"]], "6. Visualisation": [[115, "visualisation"]], "Optional: Export geometry from CAD software (Rhino)": [[115, "optional-export-geometry-from-cad-software-rhino"]], "Export mesh blocks as Assembly json file": [[115, "export-mesh-blocks-as-assembly-json-file"]], "Export mesh blocks and interfaces as Assembly json file": [[115, "export-mesh-blocks-and-interfaces-as-assembly-json-file"]]}, "indexentries": {"compas_cra": [[1, "module-compas_cra"]], "module": [[1, "module-compas_cra"], [2, "module-compas_cra.algorithms"], [3, "module-compas_cra.datastructures"], [4, "module-compas_cra.equilibrium"], [5, "module-compas_cra.geometry"], [6, "module-compas_cra.viewers"]], "compas_cra.algorithms": [[2, "module-compas_cra.algorithms"]], "compas_cra.datastructures": [[3, "module-compas_cra.datastructures"]], "compas_cra.equilibrium": [[4, "module-compas_cra.equilibrium"]], "compas_cra.geometry": [[5, "module-compas_cra.geometry"]], "compas_cra.viewers": [[6, "module-compas_cra.viewers"]], "assembly_interfaces_numpy() (in module compas_cra.algorithms)": [[7, "compas_cra.algorithms.assembly_interfaces_numpy"]], "cra_assembly (class in compas_cra.datastructures)": [[8, "compas_cra.datastructures.CRA_Assembly"]], "tostring() (compas_cra.datastructures.cra_assembly method)": [[9, "compas_cra.datastructures.CRA_Assembly.ToString"]], "__init__() (compas_cra.datastructures.cra_assembly method)": [[10, "compas_cra.datastructures.CRA_Assembly.__init__"]], "add_block() (compas_cra.datastructures.cra_assembly method)": [[11, "compas_cra.datastructures.CRA_Assembly.add_block"]], "add_block_block_interfaces() (compas_cra.datastructures.cra_assembly method)": [[12, "compas_cra.datastructures.CRA_Assembly.add_block_block_interfaces"]], "add_block_from_mesh() (compas_cra.datastructures.cra_assembly method)": [[13, "compas_cra.datastructures.CRA_Assembly.add_block_from_mesh"]], "add_blocks_from_rhinomeshes() (compas_cra.datastructures.cra_assembly method)": [[14, "compas_cra.datastructures.CRA_Assembly.add_blocks_from_rhinomeshes"]], "add_interface_to_interfaces() (compas_cra.datastructures.cra_assembly method)": [[15, "compas_cra.datastructures.CRA_Assembly.add_interface_to_interfaces"]], "add_interfaces_from_meshes() (compas_cra.datastructures.cra_assembly method)": [[16, "compas_cra.datastructures.CRA_Assembly.add_interfaces_from_meshes"]], "add_to_interfaces() (compas_cra.datastructures.cra_assembly method)": [[17, "compas_cra.datastructures.CRA_Assembly.add_to_interfaces"]], "block_node() (compas_cra.datastructures.cra_assembly method)": [[18, "compas_cra.datastructures.CRA_Assembly.block_node"]], "blocks() (compas_cra.datastructures.cra_assembly method)": [[19, "compas_cra.datastructures.CRA_Assembly.blocks"]], "compute_aabb() (compas_cra.datastructures.cra_assembly method)": [[20, "compas_cra.datastructures.CRA_Assembly.compute_aabb"]], "compute_obb() (compas_cra.datastructures.cra_assembly method)": [[21, "compas_cra.datastructures.CRA_Assembly.compute_obb"]], "copy() (compas_cra.datastructures.cra_assembly method)": [[22, "compas_cra.datastructures.CRA_Assembly.copy"]], "delete_block() (compas_cra.datastructures.cra_assembly method)": [[23, "compas_cra.datastructures.CRA_Assembly.delete_block"]], "delete_blocks() (compas_cra.datastructures.cra_assembly method)": [[24, "compas_cra.datastructures.CRA_Assembly.delete_blocks"]], "edge_blocks() (compas_cra.datastructures.cra_assembly method)": [[25, "compas_cra.datastructures.CRA_Assembly.edge_blocks"]], "edge_interfaces() (compas_cra.datastructures.cra_assembly method)": [[26, "compas_cra.datastructures.CRA_Assembly.edge_interfaces"]], "edge_line() (compas_cra.datastructures.cra_assembly method)": [[27, "compas_cra.datastructures.CRA_Assembly.edge_line"]], "edges() (compas_cra.datastructures.cra_assembly method)": [[28, "compas_cra.datastructures.CRA_Assembly.edges"]], "from_json() (compas_cra.datastructures.cra_assembly class method)": [[29, "compas_cra.datastructures.CRA_Assembly.from_json"]], "from_jsonstring() (compas_cra.datastructures.cra_assembly class method)": [[30, "compas_cra.datastructures.CRA_Assembly.from_jsonstring"]], "from_polysurfaces() (compas_cra.datastructures.cra_assembly class method)": [[31, "compas_cra.datastructures.CRA_Assembly.from_polysurfaces"]], "from_rhinomeshes() (compas_cra.datastructures.cra_assembly method)": [[32, "compas_cra.datastructures.CRA_Assembly.from_rhinomeshes"]], "from_template() (compas_cra.datastructures.cra_assembly class method)": [[33, "compas_cra.datastructures.CRA_Assembly.from_template"]], "get_weight_mean() (compas_cra.datastructures.cra_assembly method)": [[34, "compas_cra.datastructures.CRA_Assembly.get_weight_mean"]], "get_weight_total() (compas_cra.datastructures.cra_assembly method)": [[35, "compas_cra.datastructures.CRA_Assembly.get_weight_total"]], "has_block() (compas_cra.datastructures.cra_assembly method)": [[36, "compas_cra.datastructures.CRA_Assembly.has_block"]], "has_interface() (compas_cra.datastructures.cra_assembly method)": [[37, "compas_cra.datastructures.CRA_Assembly.has_interface"]], "interfaces() (compas_cra.datastructures.cra_assembly method)": [[38, "compas_cra.datastructures.CRA_Assembly.interfaces"]], "is_block_support() (compas_cra.datastructures.cra_assembly method)": [[39, "compas_cra.datastructures.CRA_Assembly.is_block_support"]], "move_block() (compas_cra.datastructures.cra_assembly method)": [[40, "compas_cra.datastructures.CRA_Assembly.move_block"]], "node_block() (compas_cra.datastructures.cra_assembly method)": [[41, "compas_cra.datastructures.CRA_Assembly.node_block"]], "node_point() (compas_cra.datastructures.cra_assembly method)": [[42, "compas_cra.datastructures.CRA_Assembly.node_point"]], "nodes() (compas_cra.datastructures.cra_assembly method)": [[43, "compas_cra.datastructures.CRA_Assembly.nodes"]], "number_of_blocks() (compas_cra.datastructures.cra_assembly method)": [[44, "compas_cra.datastructures.CRA_Assembly.number_of_blocks"]], "number_of_edges() (compas_cra.datastructures.cra_assembly method)": [[45, "compas_cra.datastructures.CRA_Assembly.number_of_edges"]], "number_of_interfaces() (compas_cra.datastructures.cra_assembly method)": [[46, "compas_cra.datastructures.CRA_Assembly.number_of_interfaces"]], "number_of_nodes() (compas_cra.datastructures.cra_assembly method)": [[47, "compas_cra.datastructures.CRA_Assembly.number_of_nodes"]], "rotate() (compas_cra.datastructures.cra_assembly method)": [[48, "compas_cra.datastructures.CRA_Assembly.rotate"]], "rotate_assembly() (compas_cra.datastructures.cra_assembly method)": [[49, "compas_cra.datastructures.CRA_Assembly.rotate_assembly"]], "rotated() (compas_cra.datastructures.cra_assembly method)": [[50, "compas_cra.datastructures.CRA_Assembly.rotated"]], "scale() (compas_cra.datastructures.cra_assembly method)": [[51, "compas_cra.datastructures.CRA_Assembly.scale"]], "scaled() (compas_cra.datastructures.cra_assembly method)": [[52, "compas_cra.datastructures.CRA_Assembly.scaled"]], "set_boundary_condition() (compas_cra.datastructures.cra_assembly method)": [[53, "compas_cra.datastructures.CRA_Assembly.set_boundary_condition"]], "set_boundary_conditions() (compas_cra.datastructures.cra_assembly method)": [[54, "compas_cra.datastructures.CRA_Assembly.set_boundary_conditions"]], "sha256() (compas_cra.datastructures.cra_assembly method)": [[55, "compas_cra.datastructures.CRA_Assembly.sha256"]], "to_json() (compas_cra.datastructures.cra_assembly method)": [[56, "compas_cra.datastructures.CRA_Assembly.to_json"]], "to_jsonstring() (compas_cra.datastructures.cra_assembly method)": [[57, "compas_cra.datastructures.CRA_Assembly.to_jsonstring"]], "transform() (compas_cra.datastructures.cra_assembly method)": [[58, "compas_cra.datastructures.CRA_Assembly.transform"]], "transform_numpy() (compas_cra.datastructures.cra_assembly method)": [[59, "compas_cra.datastructures.CRA_Assembly.transform_numpy"]], "transformed() (compas_cra.datastructures.cra_assembly method)": [[60, "compas_cra.datastructures.CRA_Assembly.transformed"]], "transformed_numpy() (compas_cra.datastructures.cra_assembly method)": [[61, "compas_cra.datastructures.CRA_Assembly.transformed_numpy"]], "translate() (compas_cra.datastructures.cra_assembly method)": [[62, "compas_cra.datastructures.CRA_Assembly.translate"]], "translated() (compas_cra.datastructures.cra_assembly method)": [[63, "compas_cra.datastructures.CRA_Assembly.translated"]], "unset_boundary_conditions() (compas_cra.datastructures.cra_assembly method)": [[64, "compas_cra.datastructures.CRA_Assembly.unset_boundary_conditions"]], "validate_data() (compas_cra.datastructures.cra_assembly class method)": [[65, "compas_cra.datastructures.CRA_Assembly.validate_data"]], "bounds() (in module compas_cra.equilibrium)": [[66, "compas_cra.equilibrium.bounds"]], "constraints() (in module compas_cra.equilibrium)": [[67, "compas_cra.equilibrium.constraints"]], "cra_penalty_solve() (in module compas_cra.equilibrium)": [[68, "compas_cra.equilibrium.cra_penalty_solve"]], "cra_solve() (in module compas_cra.equilibrium)": [[69, "compas_cra.equilibrium.cra_solve"]], "density_setup() (in module compas_cra.equilibrium)": [[70, "compas_cra.equilibrium.density_setup"]], "equilibrium_setup() (in module compas_cra.equilibrium)": [[71, "compas_cra.equilibrium.equilibrium_setup"]], "external_force_setup() (in module compas_cra.equilibrium)": [[72, "compas_cra.equilibrium.external_force_setup"]], "free_nodes() (in module compas_cra.equilibrium)": [[73, "compas_cra.equilibrium.free_nodes"]], "friction_setup() (in module compas_cra.equilibrium)": [[74, "compas_cra.equilibrium.friction_setup"]], "initialisations() (in module compas_cra.equilibrium)": [[75, "compas_cra.equilibrium.initialisations"]], "make_aeq() (in module compas_cra.equilibrium)": [[76, "compas_cra.equilibrium.make_aeq"]], "make_afr() (in module compas_cra.equilibrium)": [[77, "compas_cra.equilibrium.make_afr"]], "num_free() (in module compas_cra.equilibrium)": [[78, "compas_cra.equilibrium.num_free"]], "num_vertices() (in module compas_cra.equilibrium)": [[79, "compas_cra.equilibrium.num_vertices"]], "objectives() (in module compas_cra.equilibrium)": [[80, "compas_cra.equilibrium.objectives"]], "pyomo_result_assembly() (in module compas_cra.equilibrium)": [[81, "compas_cra.equilibrium.pyomo_result_assembly"]], "pyomo_result_check() (in module compas_cra.equilibrium)": [[82, "compas_cra.equilibrium.pyomo_result_check"]], "rbe_solve() (in module compas_cra.equilibrium)": [[83, "compas_cra.equilibrium.rbe_solve"]], "static_equilibrium_constraints() (in module compas_cra.equilibrium)": [[84, "compas_cra.equilibrium.static_equilibrium_constraints"]], "unit_basis() (in module compas_cra.equilibrium)": [[85, "compas_cra.equilibrium.unit_basis"]], "arch (class in compas_cra.geometry)": [[86, "compas_cra.geometry.Arch"]], "__init__() (compas_cra.geometry.arch method)": [[87, "compas_cra.geometry.Arch.__init__"]], "assembly() (compas_cra.geometry.arch method)": [[88, "compas_cra.geometry.Arch.assembly"]], "blocks() (compas_cra.geometry.arch method)": [[89, "compas_cra.geometry.Arch.blocks"]], "cra_view() (in module compas_cra.viewers)": [[90, "compas_cra.viewers.cra_view"]], "cra_view_ex() (in module compas_cra.viewers)": [[91, "compas_cra.viewers.cra_view_ex"]]}})